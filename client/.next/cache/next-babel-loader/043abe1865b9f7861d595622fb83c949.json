{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jin/Desktop/bccard-intern/client/components/SearchInput.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { AutoComplete, Button, Card, Col, Input, Row } from 'antd';\nimport { useSelector } from \"react-redux\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport Link from \"next/link\";\nvar Option = AutoComplete.Option;\n\nvar SearchInput = function SearchInput() {\n  _s();\n\n  var _useState = useState(\"\"),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState([]),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  var restaurantList = useSelector(function (state) {\n    return state.restaurant.restaurantList;\n  });\n\n  var handleSearch = function handleSearch(value) {\n    var res = restaurantList.filter(function (restaurant) {\n      return restaurant.id.includes(value + \"\");\n    }).map(function (restaurant) {\n      return restaurant.id;\n    });\n    setResult(res);\n    setName(value);\n  };\n\n  var handleButton = function handleButton(e) {\n    console.log(name);\n  };\n\n  return __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 23,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(AutoComplete, {\n    dropdownMatchSelectWidth: 252,\n    style: {\n      width: \"100%\"\n    },\n    onSearch: handleSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, result.map(function (name, idx) {\n    return __jsx(Option, {\n      key: idx,\n      value: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, name);\n  }))), __jsx(Col, {\n    xs: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: {\n      pathname: '/restaurant',\n      query: {\n        book: '123'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    style: {\n      \"marginLeft\": \"5px\"\n    },\n    size: \"medium\",\n    onClick: handleButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, __jsx(SearchOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 97\n    }\n  })))));\n};\n\n_s(SearchInput, \"vOEgOFUldT1VvZZYh6I8Rl61Psc=\", false, function () {\n  return [useSelector];\n});\n\n_c = SearchInput;\nexport default SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/components/SearchInput.js"],"names":["React","useState","AutoComplete","Button","Card","Col","Input","Row","useSelector","SearchOutlined","Link","Option","SearchInput","name","setName","result","setResult","restaurantList","state","restaurant","handleSearch","value","res","filter","id","includes","map","handleButton","e","console","log","width","idx","pathname","query","book"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,YAAR,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,GAApC,EAAyCC,KAAzC,EAAgDC,GAAhD,QAA0D,MAA1D;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,IAAQC,MAAR,GAAmBT,YAAnB,CAAQS,MAAR;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAGtB,kBAAwBX,QAAQ,CAAC,EAAD,CAAhC;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA4Bb,QAAQ,CAAC,EAAD,CAApC;AAAA,MAAOc,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,cAAc,GAAGT,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACC,UAAN,CAAiBF,cAArB;AAAA,GAAN,CAAlC;;AAEA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5B,QAAMC,GAAG,GAAGL,cAAc,CACrBM,MADO,CACA,UAACJ,UAAD;AAAA,aAAgBA,UAAU,CAACK,EAAX,CAAcC,QAAd,CAAuBJ,KAAK,GAAC,EAA7B,CAAhB;AAAA,KADA,EAEPK,GAFO,CAEH,UAACP,UAAD;AAAA,aAAeA,UAAU,CAACK,EAA1B;AAAA,KAFG,CAAZ;AAGAR,IAAAA,SAAS,CAACM,GAAD,CAAT;AACAR,IAAAA,OAAO,CAACO,KAAD,CAAP;AACH,GAND;;AAQA,MAAMM,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACH,GAFD;;AAIA,SACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AACI,IAAA,wBAAwB,EAAE,GAD9B;AAEI,IAAA,KAAK,EAAE;AACHkB,MAAAA,KAAK,EAAE;AADJ,KAFX;AAKI,IAAA,QAAQ,EAAEX,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKL,MAAM,CAACW,GAAP,CAAW,UAACb,IAAD,EAAOmB,GAAP;AAAA,WACR,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,GAAb;AAAkB,MAAA,KAAK,EAAEnB,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,IADL,CADQ;AAAA,GAAX,CAPL,CADJ,CADJ,EAgBI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACRoB,MAAAA,QAAQ,EAAE,aADF;AAERC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAC;AAAP;AAFC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAC,oBAAa;AAAd,KAAf;AAAqC,IAAA,IAAI,EAAE,QAA3C;AAAqD,IAAA,OAAO,EAAER,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4E,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5E,CALJ,CADJ,CAhBJ,CADJ;AA6BH,CAhDD;;GAAMf,W;UAKqBJ,W;;;KALrBI,W;AAkDN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport {AutoComplete, Button, Card, Col, Input, Row} from 'antd';\nimport {useSelector} from \"react-redux\";\nimport {SearchOutlined} from \"@ant-design/icons\";\nimport Link from \"next/link\";\nconst { Option } = AutoComplete;\n\nconst SearchInput = () => {\n\n\n    const [name, setName] = useState(\"\");\n    const [result, setResult] = useState([]);\n    const restaurantList = useSelector(state => state.restaurant.restaurantList);\n\n    const handleSearch = (value) => {\n        const res = restaurantList\n            .filter((restaurant) => restaurant.id.includes(value+\"\"))\n            .map((restaurant)=> restaurant.id);\n        setResult(res);\n        setName(value)\n    };\n\n    const handleButton = (e) => {\n        console.log(name);\n    }\n\n    return (\n        <Row>\n            <Col xs={23}>\n                <AutoComplete\n                    dropdownMatchSelectWidth={252}\n                    style={{\n                        width: \"100%\"\n                    }}\n                    onSearch={handleSearch}\n                >\n                    {result.map((name, idx) => (\n                        <Option key={idx} value={name}>\n                            {name}\n                        </Option>\n                    ))}\n                </AutoComplete>\n            </Col>\n            <Col xs={1}>\n                <Link href={{\n                    pathname: '/restaurant',\n                    query: { book:'123'},\n                }}\n                >\n                    <Button style={{\"marginLeft\":\"5px\"}} size={\"medium\"} onClick={handleButton}><SearchOutlined/></Button>\n                </Link>\n\n            </Col>\n        </Row>\n    );\n};\n\nexport default SearchInput;\n\n"]},"metadata":{},"sourceType":"module"}