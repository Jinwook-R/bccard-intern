{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(signIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signOut),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignIn),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { signin, signup } from '../api/ApiService';\nimport { all, fork, takeEvery, call, put, delay } from 'redux-saga/effects';\nimport * as actions from '../reducers/user';\nimport { SIGN_IN_FAILURE, SIGN_IN_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_OUT_FAILURE, SIGN_OUT_SUCCESS } from \"../reducers/user\";\nexport var initialState = {\n  user: null,\n  signInLoading: false,\n  signInSucceed: false,\n  signInError: null\n};\n\nfunction signInAPI(data) {\n  return signin(data);\n}\n\nfunction signIn(_ref) {\n  var payload, signInData, result;\n  return _regeneratorRuntime.wrap(function signIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          signInData = payload.signInData;\n          _context.next = 5;\n          return call(signInAPI, signInData);\n\n        case 5:\n          result = _context.sent;\n          _context.next = 8;\n          return put({\n            type: SIGN_IN_SUCCESS,\n            payload: result\n          });\n\n        case 8:\n          _context.next = 15;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n          _context.next = 15;\n          return put({\n            type: SIGN_IN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10]]);\n}\n\nfunction signUpAPI(data) {\n  return signup(data);\n}\n\nfunction signUp(_ref2) {\n  var payload, signUpData, result;\n  return _regeneratorRuntime.wrap(function signUp$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context2.prev = 1;\n          signUpData = payload.signUpData;\n          _context2.next = 5;\n          return call(signUpAPI, signUpData);\n\n        case 5:\n          result = _context2.sent;\n          _context2.next = 8;\n          return put({\n            type: SIGN_UP_SUCCESS,\n            payload: result\n          });\n\n        case 8:\n          _context2.next = 13;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 10]]);\n}\n\nfunction signOutAPI() {// return signout();\n}\n\nfunction signOut() {\n  return _regeneratorRuntime.wrap(function signOut$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: SIGN_OUT_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 12;\n          return put({\n            type: SIGN_OUT_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchSignIn() {\n  return _regeneratorRuntime.wrap(function watchSignIn$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(actions.SIGN_IN_REQUEST, signIn);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(actions.SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return all([fork(watchSignIn), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}","map":{"version":3,"sources":["/Users/bccard/Desktop/bccard-intern/client/sagas/user.js"],"names":["signIn","signUp","signOut","watchSignIn","watchSignUp","userSaga","signin","signup","all","fork","takeEvery","call","put","delay","actions","SIGN_IN_FAILURE","SIGN_IN_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_OUT_FAILURE","SIGN_OUT_SUCCESS","initialState","user","signInLoading","signInSucceed","signInError","signInAPI","data","payload","signInData","result","type","console","log","error","response","signUpAPI","signUpData","signOutAPI","SIGN_IN_REQUEST"],"mappings":"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","sourcesContent":["import {signin, signup} from '../api/ApiService';\nimport { all, fork, takeEvery, call, put, delay } from 'redux-saga/effects';\nimport * as actions from '../reducers/user';\nimport {SIGN_IN_FAILURE, SIGN_IN_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_OUT_FAILURE, SIGN_OUT_SUCCESS} from \"../reducers/user\";\n\nexport const initialState = {\n    user: null,\n    signInLoading: false,\n    signInSucceed: false,\n    signInError: null\n}\n\nfunction signInAPI(data) {\n    return signin(data);\n}\n\nfunction* signIn({payload}) {\n    try {\n        const {signInData} = payload;\n        const result = yield call(signInAPI, signInData);\n        yield put({\n            type: SIGN_IN_SUCCESS,\n            payload: result,\n        });\n    } catch (err) {\n        console.log(err);\n        yield put({\n            type: SIGN_IN_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction signUpAPI(data) {\n    return signup(data);\n}\n\nfunction* signUp({payload}) {\n\n    try{\n        const {signUpData} = payload;\n        const result = yield call(signUpAPI, signUpData);\n\n        yield put({\n            type: SIGN_UP_SUCCESS,\n            payload: result,\n        });\n    }catch (err) {\n        console.log(err);\n\n    }\n\n}\n\nfunction signOutAPI() {\n    // return signout();\n}\n\nfunction* signOut() {\n    try {\n        // const result = yield call(logOutAPI);\n        yield delay(1000);\n        yield put({\n            type: SIGN_OUT_SUCCESS,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: SIGN_OUT_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\n\nfunction* watchSignIn() {\n    yield takeEvery(actions.SIGN_IN_REQUEST, signIn);\n}\n\nfunction* watchSignUp() {\n    yield takeEvery(actions.SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchSignIn),\n        fork(watchSignUp),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}