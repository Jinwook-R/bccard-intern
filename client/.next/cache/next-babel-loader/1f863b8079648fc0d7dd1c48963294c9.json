{"ast":null,"code":"import { API_BASE_URL } from './config.js';\n\nfunction call(api, method, data) {\n  let headers = new Headers({\n    \"Content-Type\": \"application/json\"\n  });\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n\n  if (accessToken && accessToken !== null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n\n  const options = {\n    headers: headers,\n    url: API_BASE_URL + api,\n    method: method\n  };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n  }\n\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n}\n\nexport function signin(user) {\n  return call(\"/auth/signin\", \"POST\", user).then(response => {\n    console.log(\"response: \", response);\n\n    if (response.token) {\n      localStorage.setItem(\"ACCESS_TOKEN\", response.token);\n    }\n\n    return response;\n  });\n}\nexport function signout() {\n  localStorage.setItem(\"ACCESS_TOKEN\", null);\n}\nexport function signup() {}\nexport function imageCall(param) {\n  console.log(param, 'parameter');\n  if (!param) return null;\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n\n  if (accessToken && accessToken !== null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n\n  const options = {\n    headers: headers,\n    url: API_BASE_URL + `/file/restaurant/img?fileNo=${param}`,\n    method: \"GET\"\n  };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n  }\n\n  return fetch(options.url, options).then(response => response.then(res => {\n    if (!response.ok) {\n      return Promise.reject(res);\n    }\n\n    return res;\n  }));\n}\nexport function restaurantlist() {\n  return call(\"/restaurant/list\", \"GET\").then(response => {\n    if (response) {\n      console.log(\"response: \", response);\n    }\n\n    return response;\n  });\n}","map":{"version":3,"sources":["/Users/bccard/Desktop/bccard-intern/client/api/ApiService.js"],"names":["API_BASE_URL","call","api","method","data","headers","Headers","accessToken","localStorage","getItem","append","options","url","body","JSON","stringify","fetch","then","response","json","ok","Promise","reject","signin","user","console","log","token","setItem","signout","signup","imageCall","param","res","restaurantlist"],"mappings":"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","sourcesContent":["import {API_BASE_URL} from './config.js';\n\nfunction call(api, method, data){\n    let headers = new Headers({\n        \"Content-Type\":\"application/json\",\n    });\n\n    const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n    if(accessToken && accessToken !== null){\n        headers.append(\"Authorization\", \"Bearer \"+ accessToken);\n    }\n\n    const options = {\n        headers: headers,\n        url: API_BASE_URL + api,\n        method: method,\n    };\n\n    if(data){\n        options.body= JSON.stringify(data);\n    }\n\n    return fetch(options.url, options).then((response) =>\n        response.json().then((json) => {\n            if(!response.ok) {\n                return Promise.reject(json);\n            }\n            return json;\n        })\n    );\n}\n\nexport function signin(user) {\n    return call(\"/auth/signin\", \"POST\", user)\n        .then((response) => {\n            console.log(\"response: \", response);\n            if(response.token){\n                localStorage.setItem(\"ACCESS_TOKEN\", response.token);\n            }\n            return response;\n        });\n}\n\nexport function signout() {\n    localStorage.setItem(\"ACCESS_TOKEN\", null);\n}\n\nexport function signup() {\n\n}\n\nexport function imageCall(param) {\n    console.log(param, 'parameter');\n    if(!param) return null;\n    const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n    if(accessToken && accessToken !== null){\n        headers.append(\"Authorization\", \"Bearer \"+ accessToken);\n    }\n\n    const options = {\n        headers: headers,\n        url: API_BASE_URL + `/file/restaurant/img?fileNo=${param}`,\n        method: \"GET\",\n    };\n\n    if(data){\n        options.body= JSON.stringify(data);\n    }\n\n    return fetch(options.url, options).then((response) =>\n        response.then((res) => {\n            if(!response.ok) {\n                return Promise.reject(res);\n            }\n            return res;\n        })\n    );\n}\n\nexport function restaurantlist() {\n    return call(\"/restaurant/list\", \"GET\")\n        .then((response) => {\n            if(response) {\n                console.log(\"response: \", response);\n            }\n            return response;\n        });\n}"]},"metadata":{},"sourceType":"module"}