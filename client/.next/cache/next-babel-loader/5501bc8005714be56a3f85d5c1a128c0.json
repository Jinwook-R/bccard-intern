{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jin/Desktop/bccard-intern/client/components/SearchInput.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Input, AutoComplete } from 'antd';\nimport { useSelector } from \"react-redux\";\n\nfunction getRandomInt(max) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return Math.floor(Math.random() * (max - min + 1)) + min; // eslint-disable-line no-mixed-operators\n}\n\nvar searchResult = function searchResult(query, data) {\n  return data.map(function (now) {\n    return now.name.includes(query) && {\n      value: now,\n      label: __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }\n      })\n    };\n  });\n};\n\nvar SearchInput = function SearchInput() {\n  _s();\n\n  var restaurantList = useSelector(function (state) {\n    return state.restaurant.restaurantList;\n  });\n\n  var _useState = useState([]),\n      options = _useState[0],\n      setOptions = _useState[1];\n\n  var handleSearch = function handleSearch(value) {\n    setOptions(value ? searchResult(value, restaurantList) : []);\n  };\n\n  var onSelect = function onSelect(value) {\n    console.log('onSelect', value);\n  };\n\n  return __jsx(AutoComplete, {\n    dropdownMatchSelectWidth: 252,\n    style: {\n      width: 300\n    },\n    options: options,\n    onSelect: onSelect,\n    onSearch: handleSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Input.Search, {\n    size: \"large\",\n    placeholder: \"input here\",\n    enterButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(SearchInput, \"u9N7yqY9hwmd2JyEZAfb+ff9SIg=\", false, function () {\n  return [useSelector];\n});\n\n_c = SearchInput;\nexport default SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/components/SearchInput.js"],"names":["React","useState","Input","AutoComplete","useSelector","getRandomInt","max","min","Math","floor","random","searchResult","query","data","map","now","name","includes","value","label","display","justifyContent","SearchInput","restaurantList","state","restaurant","options","setOptions","handleSearch","onSelect","console","log","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,MAApC;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAAoC;AAAA,MAATC,GAAS,uEAAH,CAAG;AAChC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,GAAG,GAAGC,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD,CADgC,CAC0B;AAC7D;;AAED,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,IAAR;AAAA,SACjBA,IAAI,CAACC,GAAL,CAAS,UAACC,GAAD,EAAS;AACV,WAAOA,GAAG,CAACC,IAAJ,CAASC,QAAT,CAAkBL,KAAlB,KAA4B;AAC/BM,MAAAA,KAAK,EAAEH,GADwB;AAE/BI,MAAAA,KAAK,EACD;AACI,QAAA,KAAK,EAAE;AACHC,UAAAA,OAAO,EAAE,MADN;AAEHC,UAAAA,cAAc,EAAE;AAFb,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAH2B,KAAnC;AAiBH,GAlBL,CADiB;AAAA,CAArB;;AAqBA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAEtB,MAAMC,cAAc,GAAGnB,WAAW,CAAC,UAAAoB,KAAK;AAAA,WAAIA,KAAK,CAACC,UAAN,CAAiBF,cAArB;AAAA,GAAN,CAAlC;;AAEA,kBAA8BtB,QAAQ,CAAC,EAAD,CAAtC;AAAA,MAAOyB,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACV,KAAD,EAAW;AAC5BS,IAAAA,UAAU,CAACT,KAAK,GAAGP,YAAY,CAACO,KAAD,EAAQK,cAAR,CAAf,GAAyC,EAA/C,CAAV;AACH,GAFD;;AAIA,MAAMM,QAAQ,GAAG,SAAXA,QAAW,CAACX,KAAD,EAAW;AACxBY,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBb,KAAxB;AACH,GAFD;;AAIA,SACI,MAAC,YAAD;AACI,IAAA,wBAAwB,EAAE,GAD9B;AAEI,IAAA,KAAK,EAAE;AACHc,MAAAA,KAAK,EAAE;AADJ,KAFX;AAKI,IAAA,OAAO,EAAEN,OALb;AAMI,IAAA,QAAQ,EAAEG,QANd;AAOI,IAAA,QAAQ,EAAED,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,WAAW,EAAC,YAAvC;AAAoD,IAAA,WAAW,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ;AAaH,CA3BD;;GAAMN,W;UAEqBlB,W;;;KAFrBkB,W;AA6BN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Input, AutoComplete } from 'antd';\nimport {useSelector} from \"react-redux\";\n\nfunction getRandomInt(max, min = 0) {\n    return Math.floor(Math.random() * (max - min + 1)) + min; // eslint-disable-line no-mixed-operators\n}\n\nconst searchResult = (query, data) =>\n    data.map((now) => {\n            return now.name.includes(query) && {\n                value: now,\n                label: (\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                        }}\n                    >\n            {/*<span>*/}\n            {/*  Found {query} on{' '}*/}\n            {/*    {_}*/}\n            {/*</span>*/}\n                        {/*<span>{getRandomInt(200, 100)} results</span>*/}\n                    </div>\n                ),\n            };\n        });\n\nconst SearchInput = () => {\n\n    const restaurantList = useSelector(state => state.restaurant.restaurantList);\n\n    const [options, setOptions] = useState([]);\n\n    const handleSearch = (value) => {\n        setOptions(value ? searchResult(value, restaurantList) : []);\n    };\n\n    const onSelect = (value) => {\n        console.log('onSelect', value);\n    };\n\n    return (\n        <AutoComplete\n            dropdownMatchSelectWidth={252}\n            style={{\n                width: 300,\n            }}\n            options={options}\n            onSelect={onSelect}\n            onSearch={handleSearch}\n        >\n            <Input.Search size=\"large\" placeholder=\"input here\" enterButton />\n        </AutoComplete>\n    );\n};\n\nexport default SearchInput;\n\n"]},"metadata":{},"sourceType":"module"}