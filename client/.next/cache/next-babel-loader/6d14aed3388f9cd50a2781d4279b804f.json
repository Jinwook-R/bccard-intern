{"ast":null,"code":"var _jsxFileName = \"/Users/jin/Desktop/bccard-intern/client/components/Avatar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport * as ReactDOM from \"react-dom\";\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nclass Avatar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false\n    });\n\n    _defineProperty(this, \"handleChange\", info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl,\n          loading: false\n        }));\n      }\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      imageUrl\n    } = this.state;\n\n    const uploadButton = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, loading ? __jsx(LoadingOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 28\n      }\n    }) : __jsx(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 50\n      }\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Upload\"));\n\n    return __jsx(Upload, {\n      name: \"avatar\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      beforeUpload: beforeUpload,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, imageUrl ? __jsx(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }) : uploadButton);\n  }\n\n}\n\nexport default Avatar;","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/components/Avatar.js"],"names":["Upload","message","LoadingOutlined","PlusOutlined","ReactDOM","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","Avatar","React","Component","loading","info","status","setState","originFileObj","imageUrl","render","state","uploadButton","marginTop","handleChange","width"],"mappings":"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","sourcesContent":["import { Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport * as ReactDOM from \"react-dom\";\n\nfunction getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n        message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n        message.error('Image must smaller than 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n}\n\nclass Avatar extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    handleChange = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            getBase64(info.file.originFileObj, imageUrl =>\n                this.setState({\n                    imageUrl,\n                    loading: false,\n                }),\n            );\n        }\n    };\n\n    render() {\n        const { loading, imageUrl } = this.state;\n        const uploadButton = (\n            <div>\n                {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                <div style={{ marginTop: 8 }}>Upload</div>\n            </div>\n        );\n        return (\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                beforeUpload={beforeUpload}\n                onChange={this.handleChange}\n            >\n                {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n            </Upload>\n        );\n    }\n}\n\nexport default Avatar"]},"metadata":{},"sourceType":"module"}