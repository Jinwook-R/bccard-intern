{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jin/Desktop/bccard-intern/client/pages/_app.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport wrapper from \"../store/configureStore\";\nimport rootSaga from \"../sagas\"; //_app.js는 페이지들의 공통인 부분\n\nvar App = function App(_ref) {\n  var Component = _ref.Component;\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, \"BC\\uB85C\")), __jsx(Component, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }));\n};\n\n_c = App;\nApp.propTypes = {\n  Component: PropTypes.elementType.isRequired\n};\n\nvar configureStore = function configureStore(initialState, options) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducers, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default _c2 = wrapper.withRedux(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/pages/_app.js"],"names":["React","useState","PropTypes","Head","wrapper","rootSaga","App","Component","propTypes","elementType","isRequired","configureStore","initialState","options","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","compose","applyMiddleware","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","reducers","run","withRedux"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CACA;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAiB;AAAA,MAAfC,SAAe,QAAfA,SAAe;AAEzB,SACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CAVD;;KAAMD,G;AAYNA,GAAG,CAACE,SAAJ,GAAgB;AACZD,EAAAA,SAAS,EAAEL,SAAS,CAACO,WAAV,CAAsBC;AADrB,CAAhB;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAeC,OAAf,EAA2B;AAC9C,MAAMC,cAAc,GAAGC,oBAAoB,EAA3C;AACA,MAAMC,WAAW,GAAG,CAACF,cAAD,CAApB;AACA,MAAMG,QAAQ,GAAG,QACXC,OAAO,CAACC,eAAe,MAAf,SAAmBH,WAAnB,CAAD,CADI,GAEXE,OAAO,CACLC,eAAe,MAAf,SAAmBH,WAAnB,CADK,EAEL,CAACH,OAAO,CAACO,QAAT,IAAqB,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WAApE,GAAkFD,MAAM,CAACC,4BAAP,EAAlF,GAA0H,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GAFtH,CAFb;AAMA,MAAMC,KAAK,GAAGC,WAAW,CAACC,QAAD,EAAWd,YAAX,EAAyBK,QAAzB,CAAzB;AACAH,EAAAA,cAAc,CAACa,GAAf,CAAmBtB,QAAnB;AACA,SAAOmB,KAAP;AACH,CAZD;;AAcA,qBAAepB,OAAO,CAACwB,SAAR,CAAkBtB,GAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport 'antd/dist/antd.css';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport wrapper from \"../store/configureStore\";\nimport rootSaga from \"../sagas\";\n//_app.js는 페이지들의 공통인 부분\nconst App = ({Component}) => {\n\n    return (\n        <>\n            <Head>\n                <title>BC로</title>\n            </Head>\n            <Component/>\n        </>\n    );\n}\n\nApp.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n}\n\nconst configureStore = (initialState, options) => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware];\n    const enhancer = process.env.NODE_ENV === 'production'\n        ? compose(applyMiddleware(...middlewares))\n        : compose(\n            applyMiddleware(...middlewares),\n            !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n        );\n    const store = createStore(reducers, initialState, enhancer);\n    sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nexport default wrapper.withRedux(App);\n"]},"metadata":{},"sourceType":"module"}