{"ast":null,"code":"import { API_BASE_URL } from './config.js';\nimport axios from \"axios\";\n\nfunction call(api, method, data, config) {\n  var headers;\n\n  if (config === 'reviewInsertFile') {\n    headers = new Headers({});\n  } else {\n    headers = new Headers({\n      \"Content-Type\": \"application/json\"\n    });\n  }\n\n  var accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n\n  if (accessToken && accessToken !== null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n\n  var options = {\n    headers: headers,\n    url: API_BASE_URL + api,\n    method: method\n  };\n\n  if (data && config !== 'reviewInsertFile') {\n    options.body = JSON.stringify(data);\n  } else {\n    options.body = data;\n  }\n\n  return fetch(options.url, options).then(function (response) {\n    return response.json().then(function (json) {\n      if (response.status !== 200) {\n        return Promise.reject(json);\n      }\n\n      return json;\n    });\n  });\n}\n\nexport function loadUserRequest(data) {\n  var api = \"/auth\";\n  console.log('loadUserReqeust', data);\n  return axios.post(api, data);\n}\nexport function logInRequest(user) {\n  var api = \"/auth/login\";\n  return axios.post(api, user);\n}\nexport function signOutRequest() {\n  // console.log('signOutRequest');\n  return axios.post('/auth/logout');\n}\nexport function myreviewlist(userId) {\n  // console.log('myreviewlist API Called');\n  return call(\"/review/userReview\", \"GET\", userId).then(function (response) {\n    if (response) {\n      console.log(\"response: \", response);\n    }\n\n    return response;\n  });\n}\nexport function signup(user) {\n  return call(\"/auth/signup\", \"POST\", user).then(function (response) {\n    // console.log(response.status);\n    if (response.status === 200) {\n      alert(\"회원가입이 완료되었습니다:)\");\n    } else {\n      alert(\"회원가입에 실패하였습니다..\");\n    }\n  });\n}\nexport function reviewInsertRequest(_ref) {\n  var review = _ref.review;\n  return axios.post(\"/review/insert\", review);\n}\nexport function reviewFileInsertRequest(file) {\n  // console.log('reviewFileInsertRequest: ', file);\n  // for(const pair of file.entries()) {\n  //     console.log(pair[0]+ ', '+ pair[1]);\n  // }\n  return axios.post(\"/review/insertFile\", file);\n}\nexport function restaurantlist() {\n  return call(\"/restaurant/list\", \"GET\").then(function (response) {\n    if (response) {\n      console.log(\"response: \", response);\n    }\n\n    return response;\n  });\n}","map":{"version":3,"sources":["/Users/bccard/Desktop/bccard-intern/client/api/ApiService.js"],"names":["API_BASE_URL","axios","call","api","method","data","config","headers","Headers","accessToken","localStorage","getItem","append","options","url","body","JSON","stringify","fetch","then","response","json","status","Promise","reject","loadUserRequest","console","log","post","logInRequest","user","signOutRequest","myreviewlist","userId","signup","alert","reviewInsertRequest","review","reviewFileInsertRequest","file","restaurantlist"],"mappings":"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","sourcesContent":["import {API_BASE_URL} from './config.js';\nimport axios from \"axios\";\nfunction call(api, method, data, config){\n    let headers;\n\n    if(config === 'reviewInsertFile'){\n        headers = new Headers({});\n    }else{\n        headers = new Headers({\n             \"Content-Type\":\"application/json\",\n         });\n    }\n\n    const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n    if(accessToken && accessToken !== null){\n        headers.append(\"Authorization\", \"Bearer \"+ accessToken);\n    }\n\n    const options = {\n        headers,\n        url: API_BASE_URL + api,\n        method,\n    };\n\n    if(data && config !== 'reviewInsertFile'){\n        options.body= JSON.stringify(data);\n    } else {\n        options.body = data;\n    }\n\n    return fetch(options.url, options).then((response) =>\n        response.json().then((json) => {\n            if(response.status !== 200){\n                return Promise.reject(json);\n            }\n            return json;\n        }));\n}\n\nexport function loadUserRequest(data) {\n    const api = \"/auth\";\n    console.log('loadUserReqeust', data);\n    return axios.post(api, data);\n}\n\nexport function logInRequest(user) {\n    const api = `/auth/login`;\n    return axios.post(api, user);\n}\n\nexport function signOutRequest() {\n    // console.log('signOutRequest');\n    return axios.post('/auth/logout');\n}\n\nexport function myreviewlist(userId) {\n    // console.log('myreviewlist API Called');\n    return call(\"/review/userReview\", \"GET\", userId)\n        .then((response) => {\n            if(response) {\n                console.log(\"response: \", response);\n            }\n            return response;\n        });\n}\n\nexport function signup(user) {\n    return call(\"/auth/signup\", \"POST\", user)\n        .then((response) => {\n            // console.log(response.status);\n            if(response.status === 200) {\n                alert(\"회원가입이 완료되었습니다:)\");\n            } else {\n                alert(\"회원가입에 실패하였습니다..\");\n            }\n        });\n}\n\nexport function reviewInsertRequest({review}) {\n    return axios.post(\"/review/insert\", review);\n}\n\nexport function reviewFileInsertRequest(file){\n    // console.log('reviewFileInsertRequest: ', file);\n\n    // for(const pair of file.entries()) {\n    //     console.log(pair[0]+ ', '+ pair[1]);\n    // }\n    return axios.post(\"/review/insertFile\" ,file);\n}\n\nexport function restaurantlist() {\n    return call(\"/restaurant/list\", \"GET\")\n        .then((response) => {\n            if(response) {\n                console.log(\"response: \", response);\n            }\n            return response;\n        });\n}\n\n"]},"metadata":{},"sourceType":"module"}