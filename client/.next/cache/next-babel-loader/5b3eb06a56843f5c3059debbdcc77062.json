{"ast":null,"code":"var _jsxFileName = \"/Users/bccard/Desktop/bccard-intern/client/pages/reviewRegister.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { withRouter } from \"next/router\";\nimport AppLayout from \"../components/AppLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ReviewFileRegisterRequestAction } from \"../reducers/review\";\nimport styled from \"styled-components\";\nimport { Button, Upload } from \"antd\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport { Rate } from 'antd';\nimport ImgCrop from 'antd-img-crop';\nconst StyledReviewRegister = styled.div`\n  margin: 20px auto;\n`;\nconst StyledTextArea = styled(TextArea)`\n  height: 200px;\n  margin-bottom: 10px;\n`;\nconst StyledButton = styled(Button)`\n  display: block;\n  margin: 5px auto;\n  width: 250px;\n  height: 40px;\n  border-radius: 5px;\n  font: 20px bold;\n`;\n\nconst ReviewRegister = ({\n  router: {\n    query\n  }\n}) => {\n  const {\n    0: selectedFiles,\n    1: setSelectedFiles\n  } = useState([]);\n  const {\n    0: starValue,\n    1: setStarValue\n  } = useState(1);\n  const {\n    0: textValue,\n    1: setTextValue\n  } = useState('');\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]);\n  const user_id = useSelector(state => {\n    var _state$user, _state$user$me;\n\n    return (_state$user = state.user) === null || _state$user === void 0 ? void 0 : (_state$user$me = _state$user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    restaurant_id\n  } = query;\n  const restaurantId = restaurant_id;\n  const dispatch = useDispatch();\n\n  const onTextChange = e => {\n    setTextValue(e.target.value);\n  };\n\n  const handleStarChange = starValue => {\n    setStarValue(starValue);\n  };\n\n  const onClickHandler = event => {\n    const formData = new FormData();\n    let cnt = 0;\n\n    for (const file of selectedFiles) {\n      formData.append(\"myFile\" + cnt, file, file.name);\n      cnt++;\n    }\n\n    const data = {\n      starpoint: starValue,\n      content: textValue,\n      userId: user_id,\n      restaurantId\n    };\n    const data2 = {\n      file: formData\n    };\n    dispatch(ReviewFileRegisterRequestAction(data2));\n  };\n\n  const uploadImage = async ({\n    fileList: newFileList\n  }) => {\n    setFileList(newFileList);\n  };\n\n  const onChange = ({\n    fileList: newFileList\n  }) => {\n    setFileList(newFileList);\n  };\n\n  const onPreview = async file => {\n    let src = file.url;\n\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(StyledReviewRegister, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    style: {\n      textAlign: 'center',\n      font: '30px bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"\\uB9AC\\uBDF0 \\uB0A8\\uAE30\\uAE30\"), __jsx(\"form\", {\n    id: \"review\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"\\uBCC4\\uC810\", __jsx(Rate, {\n    onChange: handleStarChange,\n    value: starValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  })), __jsx(StyledTextArea, {\n    showCount: true,\n    maxLength: 10000,\n    onChange: onTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"App\",\n    style: {\n      marginTop: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, __jsx(ImgCrop, {\n    rotate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, __jsx(Upload, {\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    listType: \"picture-card\",\n    fileList: fileList,\n    onChange: uploadImage,\n    onPreview: onPreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, fileList.length < 5 && '+ Upload')), __jsx(\"button\", {\n    type: \"button\",\n    onClick: onClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, \"\\uC800\\uC7A5\\uD558\\uAE30\")))));\n};\n\nexport default withRouter(ReviewRegister);","map":{"version":3,"sources":["/Users/bccard/Desktop/bccard-intern/client/pages/reviewRegister.js"],"names":["React","useState","withRouter","AppLayout","useDispatch","useSelector","ReviewFileRegisterRequestAction","styled","Button","Upload","TextArea","Rate","ImgCrop","StyledReviewRegister","div","StyledTextArea","StyledButton","ReviewRegister","router","query","selectedFiles","setSelectedFiles","starValue","setStarValue","textValue","setTextValue","fileList","setFileList","user_id","state","user","me","id","restaurant_id","restaurantId","dispatch","onTextChange","e","target","value","handleStarChange","onClickHandler","event","formData","FormData","cnt","file","append","name","data","starpoint","content","userId","data2","uploadImage","newFileList","onChange","onPreview","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","document","write","outerHTML","textAlign","font","marginTop","length"],"mappings":"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","sourcesContent":["import React, {\n    useState,\n} from \"react\";\nimport {withRouter} from \"next/router\";\nimport AppLayout from \"../components/AppLayout\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {ReviewFileRegisterRequestAction} from \"../reducers/review\";\nimport styled from \"styled-components\";\nimport {Button, Upload} from \"antd\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport { Rate } from 'antd';\nimport ImgCrop from 'antd-img-crop';\n\nconst StyledReviewRegister = styled.div`\n  margin: 20px auto;\n`;\n\nconst StyledTextArea = styled(TextArea)`\n  height: 200px;\n  margin-bottom: 10px;\n`;\n\nconst StyledButton = styled(Button)`\n  display: block;\n  margin: 5px auto;\n  width: 250px;\n  height: 40px;\n  border-radius: 5px;\n  font: 20px bold;\n`;\n\nconst ReviewRegister = ({ router: { query } }) => {\n\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n    const [starValue, setStarValue] = useState(1);\n    const [textValue, setTextValue] = useState('');\n\n    const [fileList, setFileList] = useState([]);\n\n    const user_id = useSelector(state => state.user?.me?.id);\n    const {restaurant_id} = query;\n    const restaurantId = restaurant_id;\n    const dispatch = useDispatch();\n\n    const onTextChange = (e) => {\n        setTextValue(e.target.value);\n    }\n\n    const handleStarChange = (starValue) => {\n        setStarValue(starValue);\n    }\n\n    const onClickHandler = event => {\n        const formData = new FormData();\n\n        let cnt = 0;\n        for(const file of selectedFiles){\n            formData.append(\n                \"myFile\"+cnt,\n                file,\n                file.name\n            );\n            cnt++;\n        }\n\n        const data = {\n            starpoint: starValue,\n            content: textValue,\n            userId: user_id,\n            restaurantId,\n        }\n        const data2 = {\n            file: formData,\n        }\n\n        dispatch(ReviewFileRegisterRequestAction(data2));\n    };\n\n    const uploadImage = async ({ fileList: newFileList }) => {\n        setFileList(newFileList);\n    }\n\n\n    const onChange = ({ fileList: newFileList }) => {\n        setFileList(newFileList);\n    };\n\n    const onPreview = async file => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise(resolve => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow.document.write(image.outerHTML);\n    };\n\n    return (\n        <AppLayout>\n            <StyledReviewRegister>\n                <p style={{textAlign:'center', font:'30px bold'}}>리뷰 남기기</p>\n                <form id=\"review\">\n                    <span>별점<Rate onChange={handleStarChange} value={starValue}/></span>\n                    <StyledTextArea showCount maxLength={10000} onChange={onTextChange} />\n                    <div className=\"App\" style={{ marginTop: \"100px\" }}>\n                        <ImgCrop rotate>\n                            <Upload\n                                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                                listType=\"picture-card\"\n                                fileList={fileList}\n                                onChange={uploadImage}\n                                onPreview={onPreview}>\n                            {fileList.length < 5 && '+ Upload'}\n                            </Upload>\n                        </ImgCrop>\n                        <button type=\"button\" onClick={onClickHandler}>저장하기</button>\n                    </div>\n                </form>\n            </StyledReviewRegister>\n        </AppLayout>\n    );\n};\n\nexport default withRouter(ReviewRegister);\n\n"]},"metadata":{},"sourceType":"module"}