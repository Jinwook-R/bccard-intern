{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jin/Desktop/bccard-intern/client/components/SearchInput.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Input, AutoComplete, Opti } from 'antd';\nimport { useSelector } from \"react-redux\";\nvar Option = AutoComplete.Option;\n\nvar SearchInput = function SearchInput() {\n  _s();\n\n  var _useState = useState([]),\n      result = _useState[0],\n      setResult = _useState[1];\n\n  var restaurantList = useSelector(function (state) {\n    return state.restaurant.restaurantList;\n  });\n\n  var handleSearch = function handleSearch(value) {\n    var res = [];\n    res = restaurantList.filter(function (restaurant) {\n      return restaurant.id.includes(value);\n    }); // if (!value || value.indexOf('@') >= 0) {\n    //     res = [];\n    // } else {\n    //\n    // }\n\n    console.log(res);\n    setResult(res);\n  };\n\n  return __jsx(AutoComplete, {\n    dropdownMatchSelectWidth: 252,\n    style: {\n      width: \"100%\"\n    },\n    onSearch: handleSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, result.map(function (name, idx) {\n    return __jsx(Option, {\n      key: idx,\n      value: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, name);\n  }));\n};\n\n_s(SearchInput, \"IdYbQE4pKyWnAq900/8ZseNrDUM=\", false, function () {\n  return [useSelector];\n});\n\n_c = SearchInput;\nexport default SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/components/SearchInput.js"],"names":["React","useState","Input","AutoComplete","Opti","useSelector","Option","SearchInput","result","setResult","restaurantList","state","restaurant","handleSearch","value","res","filter","id","includes","console","log","width","map","name","idx"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,YAAhB,EAA8BC,IAA9B,QAA0C,MAA1C;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,IAAQC,MAAR,GAAmBH,YAAnB,CAAQG,MAAR;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAEtB,kBAA4BN,QAAQ,CAAC,EAAD,CAApC;AAAA,MAAOO,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,cAAc,GAAGL,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,UAAN,CAAiBF,cAArB;AAAA,GAAN,CAAlC;;AAEA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5B,QAAIC,GAAG,GAAG,EAAV;AAEAA,IAAAA,GAAG,GAAGL,cAAc,CAACM,MAAf,CAAsB,UAACJ,UAAD,EAAgB;AACtC,aAAOA,UAAU,CAACK,EAAX,CAAcC,QAAd,CAAuBJ,KAAvB,CAAP;AACL,KAFK,CAAN,CAH4B,CAO5B;AACA;AACA;AACA;AACA;;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AAEAN,IAAAA,SAAS,CAACM,GAAD,CAAT;AACH,GAhBD;;AAkBA,SACI,MAAC,YAAD;AACI,IAAA,wBAAwB,EAAE,GAD9B;AAEI,IAAA,KAAK,EAAE;AACHM,MAAAA,KAAK,EAAE;AADJ,KAFX;AAKI,IAAA,QAAQ,EAAER,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKL,MAAM,CAACc,GAAP,CAAW,UAACC,IAAD,EAAOC,GAAP;AAAA,WACR,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,GAAb;AAAkB,MAAA,KAAK,EAAED,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,IADL,CADQ;AAAA,GAAX,CAPL,CADJ;AAeH,CAtCD;;GAAMhB,W;UAGqBF,W;;;KAHrBE,W;AAwCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Input, AutoComplete, Opti } from 'antd';\nimport {useSelector} from \"react-redux\";\nconst { Option } = AutoComplete;\n\nconst SearchInput = () => {\n\n    const [result, setResult] = useState([]);\n    const restaurantList = useSelector(state => state.restaurant.restaurantList);\n\n    const handleSearch = (value) => {\n        let res = [];\n\n        res = restaurantList.filter((restaurant) => {\n              return restaurant.id.includes(value);\n        });\n\n        // if (!value || value.indexOf('@') >= 0) {\n        //     res = [];\n        // } else {\n        //\n        // }\n\n        console.log(res)\n\n        setResult(res);\n    };\n\n    return (\n        <AutoComplete\n            dropdownMatchSelectWidth={252}\n            style={{\n                width: \"100%\"\n            }}\n            onSearch={handleSearch}\n        >\n            {result.map((name, idx) => (\n                <Option key={idx} value={name}>\n                    {name}\n                </Option>\n            ))}\n        </AutoComplete>\n    );\n};\n\nexport default SearchInput;\n\n"]},"metadata":{},"sourceType":"module"}