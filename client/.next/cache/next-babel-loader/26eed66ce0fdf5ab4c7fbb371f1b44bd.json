{"ast":null,"code":"import { myreviewlist, reviewInsertRequest, reviewFileInsertRequest } from '../api/ApiService';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport * as actions from '../reducers/review';\nimport { MY_REVIEW_LIST_SUCCESS, MY_REVIEW_LIST_FAILURE, REVIEW_FILE_REGISTER_SUCCESS, REVIEW_FILE_REGISTER_FAILURE } from \"../reducers/review\";\n\nfunction reviewInsertAPI(data) {\n  return reviewInsertRequest(data);\n}\n\nfunction reviewFileInsertAPI(data) {\n  console.log('reviewFileInsertAPI');\n  return reviewFileInsertRequest(data);\n}\n\nfunction myReviewListAPI(userId) {\n  return myreviewlist(userId);\n}\n\nfunction* myReviewList({\n  payload\n}) {\n  try {\n    const userId = payload;\n    const result = yield myReviewListAPI(userId);\n    yield put({\n      type: MY_REVIEW_LIST_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    yield put({\n      type: MY_REVIEW_LIST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* reviewFileInsert({\n  payload\n}) {\n  console.log('reviewFileInsert:', payload);\n\n  try {\n    const review = payload.data;\n    const result = yield call(reviewFileInsertAPI, review);\n    yield put({\n      type: REVIEW_FILE_REGISTER_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    yield put({\n      type: REVIEW_FILE_REGISTER_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* reviewInsert({\n  payload\n}) {\n  console.log('reviewInsert:', payload);\n\n  try {\n    const file = payload;\n    const result = yield call(reviewInsertAPI, file);\n    yield put({\n      type: REVIEW_FILE_REGISTER_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    yield put({\n      type: REVIEW_FILE_REGISTER_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* watchReviewInsert() {\n  yield takeEvery(actions.REVIEW_REGISTER_REQUEST, reviewInsert);\n}\n\nfunction* watchReviewFileInsert() {\n  yield takeEvery(actions.REVIEW_FILE_REGISTER_REQUEST, reviewFileInsert);\n}\n\nfunction* watchMyReviewList() {\n  yield takeEvery(actions.MY_REVIEW_LIST_REQUEST, myReviewList);\n}\n\nexport default function* reviewSaga() {\n  yield all([fork(watchReviewInsert), fork(watchReviewFileInsert), fork(watchMyReviewList)]);\n}","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/sagas/review.js"],"names":["myreviewlist","reviewInsertRequest","reviewFileInsertRequest","all","fork","takeEvery","call","put","actions","MY_REVIEW_LIST_SUCCESS","MY_REVIEW_LIST_FAILURE","REVIEW_FILE_REGISTER_SUCCESS","REVIEW_FILE_REGISTER_FAILURE","reviewInsertAPI","data","reviewFileInsertAPI","console","log","myReviewListAPI","userId","myReviewList","payload","result","type","err","error","response","reviewFileInsert","review","reviewInsert","file","watchReviewInsert","REVIEW_REGISTER_REQUEST","watchReviewFileInsert","REVIEW_FILE_REGISTER_REQUEST","watchMyReviewList","MY_REVIEW_LIST_REQUEST","reviewSaga"],"mappings":"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","sourcesContent":["import {\n    myreviewlist,\n    reviewInsertRequest,\n    reviewFileInsertRequest\n} from '../api/ApiService';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport * as actions from '../reducers/review';\nimport {MY_REVIEW_LIST_SUCCESS, MY_REVIEW_LIST_FAILURE, REVIEW_FILE_REGISTER_SUCCESS, REVIEW_FILE_REGISTER_FAILURE} from \"../reducers/review\";\n\nfunction reviewInsertAPI(data) {\n    return reviewInsertRequest(data);\n}\n\nfunction reviewFileInsertAPI(data) {\n    console.log('reviewFileInsertAPI')\n    return reviewFileInsertRequest(data);\n}\n\nfunction myReviewListAPI( userId ) {\n    return myreviewlist(userId)\n}\n\nfunction* myReviewList( {payload} ) {\n    try{\n        const userId = payload;\n        const result = yield myReviewListAPI(userId);\n        yield put({\n            type: MY_REVIEW_LIST_SUCCESS,\n            payload: result\n        })\n    }catch (err) {\n        yield put({\n            type: MY_REVIEW_LIST_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\n\nfunction* reviewFileInsert( {payload} ) {\n\n    console.log('reviewFileInsert:' , payload);\n\n    try {\n        const review = payload.data;\n        const result = yield call(reviewFileInsertAPI, review);\n        yield put({\n            type: REVIEW_FILE_REGISTER_SUCCESS,\n            payload: result,\n        });\n    } catch (err) {\n        yield put({\n            type: REVIEW_FILE_REGISTER_FAILURE,\n            error: err,\n        });\n    }\n}\n\n\nfunction* reviewInsert( {payload} ) {\n    console.log('reviewInsert:' , payload);\n    try {\n        const file = payload;\n        const result = yield call(reviewInsertAPI, file);\n        yield put({\n            type: REVIEW_FILE_REGISTER_SUCCESS,\n            payload: result,\n        });\n    } catch (err) {\n        yield put({\n            type: REVIEW_FILE_REGISTER_FAILURE,\n            error: err,\n        });\n    }\n}\n\nfunction* watchReviewInsert() {\n    yield takeEvery(actions.REVIEW_REGISTER_REQUEST, reviewInsert);\n}\n\nfunction* watchReviewFileInsert() {\n    yield takeEvery(actions.REVIEW_FILE_REGISTER_REQUEST, reviewFileInsert);\n}\n\nfunction* watchMyReviewList() {\n    yield takeEvery(actions.MY_REVIEW_LIST_REQUEST, myReviewList);\n}\n\nexport default function* reviewSaga() {\n    yield all([\n        fork(watchReviewInsert),\n        fork(watchReviewFileInsert),\n        fork(watchMyReviewList)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}