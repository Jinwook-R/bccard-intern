{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nconst configureStore = context => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","createWrapper","composeWithDevTools","reducer","configureStore","context","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","store","run","rootSaga","wrapper","debug"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAChC,QAAMC,cAAc,GAAGC,oBAAoB,EAA3C;AACA,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAG,QACXT,OAAO,CAACF,eAAe,CAAC,GAAGU,WAAJ,CAAhB,CADI,GAEXN,mBAAmB,CACjBJ,eAAe,CAAC,GAAGU,WAAJ,CADE,CAFzB;AAKA,QAAME,KAAK,GAAGX,WAAW,CAACI,OAAD,EAAUM,QAAV,CAAzB;AACAH,EAAAA,cAAc,CAACK,GAAf,CAAmBC,QAAnB;AAEA,SAAOF,KAAP;AACH,CAZD;;AAcA,MAAMG,OAAO,GAAGZ,aAAa,CAACG,cAAD,EAAiB;AAAEU,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from '../reducers';\n\nconst configureStore = (context) => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [];\n    const enhancer = process.env.NODE_ENV === 'production'\n        ? compose(applyMiddleware(...middlewares))\n        : composeWithDevTools(\n            applyMiddleware(...middlewares),\n        );\n    const store = createStore(reducer, enhancer);\n    sagaMiddleware.run(rootSaga);\n\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === 'development' });\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}