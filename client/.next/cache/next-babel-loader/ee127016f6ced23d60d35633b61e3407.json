{"ast":null,"code":"var _jsxFileName = \"/Users/jin/Desktop/bccard-intern/client/pages/search.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { withRouter } from \"next/router\";\n\nconst Search = ({\n  router: {\n    query\n  }\n}) => {\n  const {\n    name\n  } = query;\n  const restaurantList = useSelector(state => state.restaurant.restaurantList);\n  return __jsx(React.Fragment, null, restaurantList.filter(restaurant => restaurant.name.includes(name)).map(restaurant => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 99\n    }\n  }, restaurant.name)));\n};\n\nexport default withRouter(Search);","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/pages/search.js"],"names":["React","useSelector","withRouter","Search","router","query","name","restaurantList","state","restaurant","filter","includes","map"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,UAAR,QAAyB,aAAzB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF;AAAV,CAAD,KAA2B;AAEtC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAME,cAAc,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBF,cAA3B,CAAlC;AAEA,SACI,4BACCA,cAAc,CAACG,MAAf,CAAuBD,UAAD,IAAgBA,UAAU,CAACH,IAAX,CAAgBK,QAAhB,CAAyBL,IAAzB,CAAtC,EAAsEM,GAAtE,CAA2EH,UAAD,IAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,UAAU,CAACH,IAAjB,CAAzF,CADD,CADJ;AAKH,CAVD;;AAYA,eAAeJ,UAAU,CAACC,MAAD,CAAzB","sourcesContent":["import * as React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {withRouter} from \"next/router\";\n\nconst Search = ({ router: { query } }) => {\n\n    const { name } = query;\n    const restaurantList = useSelector(state => state.restaurant.restaurantList);\n\n    return (\n        <>\n        {restaurantList.filter((restaurant) => restaurant.name.includes(name)).map((restaurant)=> <div>{restaurant.name}</div>)}\n        </>\n        );\n};\n\nexport default withRouter(Search);"]},"metadata":{},"sourceType":"module"}