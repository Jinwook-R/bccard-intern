{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(myReviewList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(reviewFileInsert),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(reviewInsert),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchReviewInsert),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchReviewFileInsert),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchMyReviewList),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(reviewSaga);\n\nimport { myreviewlist, reviewinsert, reviewfileinsert } from '../api/ApiService';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport * as actions from '../reducers/review';\nimport { REVIEW_REGISTER_SUCCESS, REVIEW_REGISTER_FAILURE, MY_REVIEW_LIST_SUCCESS, MY_REVIEW_LIST_FAILURE, REVIEW_FILE_REGISTER_SUCCESS, REVIEW_FILE_REGISTER_FAILURE } from \"../reducers/review\";\n\nfunction reviewInsertAPI(data) {\n  return reviewinsert(data, {});\n}\n\nfunction reviewFileInsertAPI(data) {\n  return reviewfileinsert(data);\n}\n\nfunction myReviewListAPI(userId) {\n  return myreviewlist(userId);\n}\n\nfunction myReviewList(_ref) {\n  var payload, userId, result;\n  return _regeneratorRuntime.wrap(function myReviewList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          userId = payload;\n          _context.next = 5;\n          return myReviewListAPI(userId);\n\n        case 5:\n          result = _context.sent;\n          _context.next = 8;\n          return put({\n            type: MY_REVIEW_LIST_SUCCESS,\n            payload: result\n          });\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 14;\n          return put({\n            type: MY_REVIEW_LIST_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10]]);\n}\n\nfunction reviewFileInsert(_ref2) {\n  var payload, review, result;\n  return _regeneratorRuntime.wrap(function reviewFileInsert$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref2.payload;\n          console.log('reviewFileInsert:', payload);\n          _context2.prev = 2;\n          review = payload;\n          _context2.next = 6;\n          return call(reviewInsertAPI, review);\n\n        case 6:\n          result = _context2.sent;\n          _context2.next = 9;\n          return put({\n            type: REVIEW_FILE_REGISTER_SUCCESS,\n            payload: result\n          });\n\n        case 9:\n          _context2.next = 15;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](2);\n          _context2.next = 15;\n          return put({\n            type: REVIEW_FILE_REGISTER_FAILURE,\n            error: _context2.t0\n          });\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[2, 11]]);\n}\n\nfunction reviewInsert(_ref3) {\n  var payload, file, result;\n  return _regeneratorRuntime.wrap(function reviewInsert$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref3.payload;\n          console.log('reviewInsert:', payload);\n          _context3.prev = 2;\n          file = payload;\n          _context3.next = 6;\n          return call(reviewFileInsertAPI, file);\n\n        case 6:\n          result = _context3.sent;\n          _context3.next = 9;\n          return put({\n            type: REVIEW_FILE_REGISTER_SUCCESS,\n            payload: result\n          });\n\n        case 9:\n          _context3.next = 15;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](2);\n          _context3.next = 15;\n          return put({\n            type: REVIEW_FILE_REGISTER_FAILURE,\n            error: _context3.t0\n          });\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[2, 11]]);\n}\n\nfunction watchReviewInsert() {\n  return _regeneratorRuntime.wrap(function watchReviewInsert$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(actions.REVIEW_REGISTER_REQUEST, reviewInsert);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchReviewFileInsert() {\n  return _regeneratorRuntime.wrap(function watchReviewFileInsert$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(actions.REVIEW_FILE_REGISTER_REQUEST, reviewFileInsert);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchMyReviewList() {\n  return _regeneratorRuntime.wrap(function watchMyReviewList$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(actions.MY_REVIEW_LIST_REQUEST, myReviewList);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function reviewSaga() {\n  return _regeneratorRuntime.wrap(function reviewSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchReviewInsert), fork(watchReviewFileInsert), fork(watchMyReviewList)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["/Users/jin/Desktop/bi/client/sagas/review.js"],"names":["myReviewList","reviewFileInsert","reviewInsert","watchReviewInsert","watchReviewFileInsert","watchMyReviewList","reviewSaga","myreviewlist","reviewinsert","reviewfileinsert","all","fork","takeEvery","call","put","actions","REVIEW_REGISTER_SUCCESS","REVIEW_REGISTER_FAILURE","MY_REVIEW_LIST_SUCCESS","MY_REVIEW_LIST_FAILURE","REVIEW_FILE_REGISTER_SUCCESS","REVIEW_FILE_REGISTER_FAILURE","reviewInsertAPI","data","reviewFileInsertAPI","myReviewListAPI","userId","payload","result","type","error","response","console","log","review","file","REVIEW_REGISTER_REQUEST","REVIEW_FILE_REGISTER_REQUEST","MY_REVIEW_LIST_REQUEST"],"mappings":"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","sourcesContent":["import {myreviewlist, reviewinsert, reviewfileinsert} from '../api/ApiService';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport * as actions from '../reducers/review';\nimport {REVIEW_REGISTER_SUCCESS, REVIEW_REGISTER_FAILURE, MY_REVIEW_LIST_SUCCESS, MY_REVIEW_LIST_FAILURE, REVIEW_FILE_REGISTER_SUCCESS, REVIEW_FILE_REGISTER_FAILURE} from \"../reducers/review\";\n\nfunction reviewInsertAPI(data) {\n    return reviewinsert(data,{});\n}\n\nfunction reviewFileInsertAPI(data) {\n    return reviewfileinsert(data);\n}\n\nfunction myReviewListAPI( userId ) {\n    return myreviewlist(userId)\n}\n\nfunction* myReviewList( {payload} ) {\n    try{\n        const userId = payload;\n        const result = yield myReviewListAPI(userId);\n        yield put({\n            type: MY_REVIEW_LIST_SUCCESS,\n            payload: result\n        })\n    }catch (err) {\n        yield put({\n            type: MY_REVIEW_LIST_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\n\nfunction* reviewFileInsert({payload}) {\n    console.log('reviewFileInsert:' , payload);\n    try {\n        const review = payload;\n        const result = yield call(reviewInsertAPI, review);\n        yield put({\n            type: REVIEW_FILE_REGISTER_SUCCESS,\n            payload: result,\n        });\n    } catch (err) {\n        yield put({\n            type: REVIEW_FILE_REGISTER_FAILURE,\n            error: err,\n        });\n    }\n}\n\n\nfunction* reviewInsert( {payload} ) {\n    console.log('reviewInsert:' , payload);\n    try {\n        const file = payload;\n        const result = yield call(reviewFileInsertAPI, file);\n        yield put({\n            type: REVIEW_FILE_REGISTER_SUCCESS,\n            payload: result,\n        });\n    } catch (err) {\n        yield put({\n            type: REVIEW_FILE_REGISTER_FAILURE,\n            error: err,\n        });\n    }\n}\n\nfunction* watchReviewInsert() {\n    yield takeEvery(actions.REVIEW_REGISTER_REQUEST, reviewInsert);\n}\n\nfunction* watchReviewFileInsert() {\n    yield takeEvery(actions.REVIEW_FILE_REGISTER_REQUEST, reviewFileInsert);\n}\n\nfunction* watchMyReviewList() {\n    yield takeEvery(actions.MY_REVIEW_LIST_REQUEST, myReviewList);\n}\n\nexport default function* reviewSaga() {\n    yield all([\n        fork(watchReviewInsert),\n        fork(watchReviewFileInsert),\n        fork(watchMyReviewList)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}