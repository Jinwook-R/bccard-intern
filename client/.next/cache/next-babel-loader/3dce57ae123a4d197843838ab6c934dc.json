{"ast":null,"code":"var _jsxFileName = \"/Users/bccard/Desktop/bccard-intern/client/pages/reviewRegister.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useState, useEffect } from \"react\";\n\nconst ReviewRegister = () => {\n  const {\n    0: isDragging,\n    1: setIsDragging\n  } = useState(false);\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n  const dragRef = useRef(null);\n  const fileId = useRef(0);\n  const onChangeFiles = useCallback(e => {\n    let selectFiles = [];\n    let tempFiles = files;\n\n    if (e.type === \"drop\") {\n      selectFiles = e.dataTransfer.files;\n    } else {\n      selectFiles = e.target.files;\n    }\n\n    for (const file of selectFiles) {\n      tempFiles = [...tempFiles, {\n        id: fileId.current++,\n        object: file\n      }];\n    }\n\n    setFiles(tempFiles);\n  }, [files]);\n  const handleFilterFile = useCallback(id => {\n    setFiles(files.filter(file => file.id !== id));\n  }, [files]);\n  const handleDragIn = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n  const handleDragOut = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n  }, []);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (e.dataTransfer.files) {\n      setIsDragging(true);\n    }\n  }, []);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    onChangeFiles(e);\n    setIsDragging(false);\n  }, [onChangeFiles]);\n  const initDragEvents = useCallback(() => {\n    if (dragRef.current !== null) {\n      dragRef.current.addEventListener(\"dragenter\", handleDragIn);\n      dragRef.current.addEventListener(\"dragleave\", handleDragOut);\n      dragRef.current.addEventListener(\"dragover\", handleDragOver);\n      dragRef.current.addEventListener(\"drop\", handleDrop);\n    }\n  }, [handleDragIn, handleDragOut, handleDragOver, handleDrop]);\n  const resetDragEvents = useCallback(() => {\n    if (dragRef.current !== null) {\n      dragRef.current.removeEventListener(\"dragenter\", handleDragIn);\n      dragRef.current.removeEventListener(\"dragleave\", handleDragOut);\n      dragRef.current.removeEventListener(\"dragover\", handleDragOver);\n      dragRef.current.removeEventListener(\"drop\", handleDrop);\n    }\n  }, [handleDragIn, handleDragOut, handleDragOver, handleDrop]);\n  useEffect(() => {\n    initDragEvents();\n    return () => resetDragEvents();\n  }, [initDragEvents, resetDragEvents]);\n  return __jsx(\"div\", {\n    className: \"DragDrop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    id: \"fileUpload\",\n    style: {\n      display: \"none\"\n    },\n    multiple: true,\n    onChange: onChangeFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    className: isDragging ? \"DragDrop-File-Dragging\" : \"DragDrop-File\",\n    htmlFor: \"fileUpload\",\n    ref: dragRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"\\uD30C\\uC77C \\uCCA8\\uBD80\")), __jsx(\"div\", {\n    className: \"DragDrop-Files\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, files.length > 0 && files.map(file => {\n    const {\n      id,\n      object: {\n        name\n      }\n    } = file;\n    return __jsx(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, name), __jsx(\"div\", {\n      className: \"DragDrop-Files-Filter\",\n      onClick: () => handleFilterFile(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, \"X\"));\n  })));\n};\n\nexport default withRouter(ReviewRegister);","map":{"version":3,"sources":["/Users/bccard/Desktop/bccard-intern/client/pages/reviewRegister.js"],"names":["React","useCallback","useRef","useState","useEffect","ReviewRegister","isDragging","setIsDragging","files","setFiles","dragRef","fileId","onChangeFiles","e","selectFiles","tempFiles","type","dataTransfer","target","file","id","current","object","handleFilterFile","filter","handleDragIn","preventDefault","stopPropagation","handleDragOut","handleDragOver","handleDrop","initDragEvents","addEventListener","resetDragEvents","removeEventListener","display","length","map","name","withRouter"],"mappings":"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","sourcesContent":["import React, {\n    useCallback,\n    useRef,\n    useState,\n    useEffect\n} from \"react\";\n\nconst ReviewRegister = () => {\n    const [isDragging, setIsDragging] = useState(false);\n    const [files, setFiles] = useState([]);\n\n    const dragRef = useRef(null);\n    const fileId = useRef(0);\n\n    const onChangeFiles = useCallback(\n        (e) => {\n        let selectFiles = [];\n        let tempFiles = files;\n\n        if (e.type === \"drop\") {\n            selectFiles = e.dataTransfer.files;\n        } else {\n            selectFiles = e.target.files;\n        }\n\n        for (const file of selectFiles) {\n            tempFiles = [\n                ...tempFiles,\n                {\n                    id: fileId.current++,\n                    object: file\n                }\n            ];\n        }\n\n        setFiles(tempFiles);\n    },\n    [files]\n);\n\n    const handleFilterFile = useCallback(\n        (id) => {\n        setFiles(files.filter((file) => file.id !== id));\n    },\n    [files]\n);\n\n    const handleDragIn = useCallback((e)=> {\n        e.preventDefault();\n        e.stopPropagation();\n    }, []);\n\n    const handleDragOut = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        setIsDragging(false);\n    }, []);\n\n    const handleDragOver = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (e.dataTransfer.files) {\n            setIsDragging(true);\n        }\n    }, []);\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onChangeFiles(e);\n        setIsDragging(false);\n    },\n    [onChangeFiles]\n);\n\n    const initDragEvents = useCallback(() => {\n        if (dragRef.current !== null) {\n            dragRef.current.addEventListener(\"dragenter\", handleDragIn);\n            dragRef.current.addEventListener(\"dragleave\", handleDragOut);\n            dragRef.current.addEventListener(\"dragover\", handleDragOver);\n            dragRef.current.addEventListener(\"drop\", handleDrop);\n        }\n    }, [handleDragIn, handleDragOut, handleDragOver, handleDrop]);\n\n    const resetDragEvents = useCallback(() => {\n        if (dragRef.current !== null) {\n            dragRef.current.removeEventListener(\"dragenter\", handleDragIn);\n            dragRef.current.removeEventListener(\"dragleave\", handleDragOut);\n            dragRef.current.removeEventListener(\"dragover\", handleDragOver);\n            dragRef.current.removeEventListener(\"drop\", handleDrop);\n        }\n    }, [handleDragIn, handleDragOut, handleDragOver, handleDrop]);\n\n    useEffect(() => {\n        initDragEvents();\n\n        return () => resetDragEvents();\n    }, [initDragEvents, resetDragEvents]);\n\n    return (\n        <div className=\"DragDrop\">\n            <input\n                type=\"file\"\n                id=\"fileUpload\"\n                style={{ display: \"none\" }}\n                multiple={true}\n                onChange={onChangeFiles}\n            />\n\n            <label\n                className={isDragging ? \"DragDrop-File-Dragging\" : \"DragDrop-File\"}\n                htmlFor=\"fileUpload\"\n                ref={dragRef}\n            >\n                <div>파일 첨부</div>\n            </label>\n\n            <div className=\"DragDrop-Files\">\n                {files.length > 0 &&\n                files.map((file) => {\n                    const {\n                        id,\n                        object: { name }\n                    } = file;\n\n                    return (\n                        <div key={id}>\n                            <div>{name}</div>\n                            <div\n                                className=\"DragDrop-Files-Filter\"\n                                onClick={() => handleFilterFile(id)}\n                            >\n                                X\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(ReviewRegister);\n"]},"metadata":{},"sourceType":"module"}