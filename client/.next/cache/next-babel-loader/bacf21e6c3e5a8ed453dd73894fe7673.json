{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(signIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignIn),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { signin } from '../api/ApiService';\nimport { all, fork, takeEvery, call, put, delay } from 'redux-saga/effects';\nimport * as actions from '../reducers/user';\nimport { SIGN_IN_FAILURE, SIGN_IN_SUCCESS } from \"../reducers/user\";\nexport var initialState = {\n  user: null,\n  signInLoading: false,\n  signInSucceed: false,\n  signInError: null\n};\n\nfunction signInAPI(data) {\n  return signin(data);\n}\n\nfunction signIn(_ref) {\n  var payload, signInData, result;\n  return _regeneratorRuntime.wrap(function signIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          signInData = payload.signInData;\n          console.log(signInData);\n          _context.next = 6;\n          return call(signInAPI, signInData);\n\n        case 6:\n          result = _context.sent;\n          _context.next = 9;\n          return put({\n            type: SIGN_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 9:\n          _context.next = 16;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](1);\n          console.error(_context.t0);\n          _context.next = 16;\n          return put({\n            type: SIGN_IN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction watchSignIn() {\n  return _regeneratorRuntime.wrap(function watchSignIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actions.SIGN_IN_REQUEST, signIn);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchSignIn) // fork(watchSignUp),\n          ]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/sagas/user.js"],"names":["signIn","watchSignIn","userSaga","signin","all","fork","takeEvery","call","put","delay","actions","SIGN_IN_FAILURE","SIGN_IN_SUCCESS","initialState","user","signInLoading","signInSucceed","signInError","signInAPI","data","payload","signInData","console","log","result","type","error","response","SIGN_IN_REQUEST"],"mappings":";;oDAgBUA,M;qDAmBAC,W;qDAKeC,Q;;AAxCzB,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,GAArC,EAA0CC,KAA1C,QAAuD,oBAAvD;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,SAAQC,eAAR,EAAyBC,eAAzB,QAA+C,kBAA/C;AAEA,OAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,IAAI,EAAE,IADkB;AAExBC,EAAAA,aAAa,EAAE,KAFS;AAGxBC,EAAAA,aAAa,EAAE,KAHS;AAIxBC,EAAAA,WAAW,EAAE;AAJW,CAArB;;AAOP,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,SAAOhB,MAAM,CAACgB,IAAD,CAAb;AACH;;AAED,SAAUnB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBoB,UAAAA,OAAlB,QAAkBA,OAAlB;AAAA;AAGeC,UAAAA,UAHf,GAG6BD,OAH7B,CAGeC,UAHf;AAIQC,UAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAJR;AAKuB,iBAAMd,IAAI,CAACW,SAAD,EAAYG,UAAZ,CAAV;;AALvB;AAKcG,UAAAA,MALd;AAAA;AAMQ,iBAAMhB,GAAG,CAAC;AACNiB,YAAAA,IAAI,EAAEb,eADA;AAENO,YAAAA,IAAI,EAAEK,MAAM,CAACL;AAFP,WAAD,CAAT;;AANR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWQG,UAAAA,OAAO,CAACI,KAAR;AAXR;AAYQ,iBAAMlB,GAAG,CAAC;AACNiB,YAAAA,IAAI,EAAEd,eADA;AAENe,YAAAA,KAAK,EAAE,YAAIC,QAAJ,CAAaR;AAFd,WAAD,CAAT;;AAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SAAUlB,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,SAAS,CAACI,OAAO,CAACkB,eAAT,EAA0B5B,MAA1B,CAAf;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAME,GAAG,CAAC,CACNC,IAAI,CAACJ,WAAD,CADE,CAEN;AAFM,WAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {signin} from '../api/ApiService';\nimport { all, fork, takeEvery, call, put, delay } from 'redux-saga/effects';\nimport * as actions from '../reducers/user';\nimport {SIGN_IN_FAILURE, SIGN_IN_SUCCESS} from \"../reducers/user\";\n\nexport const initialState = {\n    user: null,\n    signInLoading: false,\n    signInSucceed: false,\n    signInError: null\n}\n\nfunction signInAPI(data) {\n    return signin(data);\n}\n\nfunction* signIn({payload}) {\n    \n    try {\n        const {signInData} = payload;\n        console.log(signInData);\n        const result = yield call(signInAPI, signInData);\n        yield put({\n            type: SIGN_IN_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: SIGN_IN_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchSignIn() {\n    yield takeEvery(actions.SIGN_IN_REQUEST, signIn);\n    // yield takeEvery(actions.SIGN_OUT_REQUEST, signOut);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchSignIn),\n        // fork(watchSignUp),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}