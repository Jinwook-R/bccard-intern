{"ast":null,"code":"import { restaurantlist } from '../api/ApiService';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport * as actions from '../reducers/restaurant';\nimport { RESTAURANT_LIST_REQUEST, RESTAURANT_LIST_SUCCESS, RESTAURANT_LIST_FAILURE } from \"../reducers/restaurant\";\n\nfunction restaurantListAPI() {\n  return restaurantlist();\n}\n\nfunction* restaurantList() {\n  try {\n    const result = yield call(restaurantListAPI);\n    console.log(result, '************************');\n    yield put({\n      type: RESTAURANT_LIST_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    alert(err.error);\n    yield put({\n      type: SIGN_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchRestaurantList() {\n  yield takeEvery(actions.RESTAURANT_LIST_REQUEST, restaurantList);\n}\n\nexport default function* restaurantSaga() {\n  yield all([fork(watchRestaurantList)]);\n}","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/sagas/restaurant.js"],"names":["restaurantlist","all","fork","takeEvery","call","put","actions","RESTAURANT_LIST_REQUEST","RESTAURANT_LIST_SUCCESS","RESTAURANT_LIST_FAILURE","restaurantListAPI","restaurantList","result","console","log","type","payload","err","alert","error","SIGN_IN_FAILURE","response","data","watchRestaurantList","restaurantSaga"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,mBAA7B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,GAArC,QAAgD,oBAAhD;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,EAA0DC,uBAA1D,QAAwF,wBAAxF;;AAEA,SAASC,iBAAT,GAA6B;AACzB,SAAOV,cAAc,EAArB;AACH;;AAED,UAAUW,cAAV,GAA2B;AACvB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMR,IAAI,CAACM,iBAAD,CAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAmB,0BAAnB;AACA,UAAMP,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEP,uBADA;AAENQ,MAAAA,OAAO,EAAEJ;AAFH,KAAD,CAAT;AAKH,GARD,CAQE,OAAOK,GAAP,EAAY;AACVC,IAAAA,KAAK,CAACD,GAAG,CAACE,KAAL,CAAL;AACA,UAAMd,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEK,eADA;AAEND,MAAAA,KAAK,EAAEF,GAAG,CAACI,QAAJ,CAAaC;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUC,mBAAV,GAAgC;AAC5B,QAAMpB,SAAS,CAACG,OAAO,CAACC,uBAAT,EAAkCI,cAAlC,CAAf;AACH;;AAED,eAAe,UAAUa,cAAV,GAA2B;AACtC,QAAMvB,GAAG,CAAC,CACNC,IAAI,CAACqB,mBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import {restaurantlist} from '../api/ApiService';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport * as actions from '../reducers/restaurant';\nimport {RESTAURANT_LIST_REQUEST, RESTAURANT_LIST_SUCCESS, RESTAURANT_LIST_FAILURE} from \"../reducers/restaurant\";\n\nfunction restaurantListAPI() {\n    return restaurantlist();\n}\n\nfunction* restaurantList() {\n    try {\n        const result = yield call(restaurantListAPI);\n        console.log(result,'************************');\n        yield put({\n            type: RESTAURANT_LIST_SUCCESS,\n            payload: result,\n        });\n\n    } catch (err) {\n        alert(err.error);\n        yield put({\n            type: SIGN_IN_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchRestaurantList() {\n    yield takeEvery(actions.RESTAURANT_LIST_REQUEST, restaurantList);\n}\n\nexport default function* restaurantSaga() {\n    yield all([\n        fork(watchRestaurantList),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}