{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { API_BASE_URL } from './config.js';\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\n\nfunction call(api, method, data, config) {\n  var headers;\n\n  if (config === 'reviewInsertFile') {\n    headers = new Headers({});\n  } else {\n    headers = new Headers({\n      \"Content-Type\": \"application/json\"\n    });\n  }\n\n  var accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n\n  if (accessToken && accessToken !== null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n\n  var options = {\n    headers: headers,\n    url: API_BASE_URL + api,\n    method: method\n  };\n\n  if (data && config !== 'reviewInsertFile') {\n    options.body = JSON.stringify(data);\n  } else {\n    options.body = data;\n  }\n\n  return fetch(options.url, options).then(function (response) {\n    return response.json().then(function (json) {\n      if (response.status !== 200) {\n        return Promise.reject(json);\n      }\n\n      return json;\n    });\n  });\n}\n\nexport function loadUserRequest(user) {\n  var api = \"/auth\";\n  return axios.get(api, user);\n}\nexport function logInRequest(user) {\n  var api = \"/auth/login\";\n  return axios.post(api, user);\n}\nexport function signOutRequest() {\n  console.log('signOutRequest');\n  return axios.post('/auth/logout');\n}\nexport function myreviewlist(userId) {\n  console.log('myreviewlist API Called');\n  return call(\"/review/userReview\", \"GET\", userId).then(function (response) {\n    if (response) {\n      console.log(\"response: \", response);\n    }\n\n    return response;\n  });\n}\nexport function signup(user) {\n  return call(\"/auth/signup\", \"POST\", user).then(function (response) {\n    console.log(response.status);\n\n    if (response.status === 200) {\n      alert(\"회원가입이 완료되었습니다:)\");\n    } else {\n      alert(\"회원가입에 실패하였습니다..\");\n    }\n  });\n}\nexport function reviewinsert(_ref) {\n  _s();\n\n  var review = _ref.review;\n  var router = useRouter();\n  return call(\"/review/insert\", \"POST\", review).then(function (response) {\n    console.log(response);\n    alert(\"리뷰등록이 완료되었습니다:)\");\n    router.replace('/');\n  });\n}\n\n_s(reviewinsert, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\nexport function reviewfileinsert(_ref2) {\n  _s2();\n\n  var file = _ref2.file;\n  var data = file;\n  console.log(data);\n  var router = useRouter();\n  return call(\"/review/insertFile\", \"POST\", data, 'reviewInsertFile').then(function (response) {\n    console.log(response);\n    router.replace('/');\n  });\n}\n\n_s2(reviewfileinsert, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\nexport function restaurantlist() {\n  return call(\"/restaurant/list\", \"GET\").then(function (response) {\n    if (response) {\n      console.log(\"response: \", response);\n    }\n\n    return response;\n  });\n}","map":{"version":3,"sources":["/Users/jin/Desktop/bi/client/api/ApiService.js"],"names":["API_BASE_URL","axios","useRouter","call","api","method","data","config","headers","Headers","accessToken","localStorage","getItem","append","options","url","body","JSON","stringify","fetch","then","response","json","status","Promise","reject","loadUserRequest","user","get","logInRequest","post","signOutRequest","console","log","myreviewlist","userId","signup","alert","reviewinsert","review","router","replace","reviewfileinsert","file","restaurantlist"],"mappings":";;;AAAA,SAAQA,YAAR,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;;AACA,SAASC,IAAT,CAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,MAAjC,EAAwC;AACpC,MAAIC,OAAJ;;AAEA,MAAGD,MAAM,KAAK,kBAAd,EAAiC;AAC7BC,IAAAA,OAAO,GAAG,IAAIC,OAAJ,CAAY,EAAZ,CAAV;AAEH,GAHD,MAGK;AACDD,IAAAA,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACjB,sBAAe;AADE,KAAZ,CAAV;AAGH;;AAED,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAApB;;AACA,MAAGF,WAAW,IAAIA,WAAW,KAAK,IAAlC,EAAuC;AACnCF,IAAAA,OAAO,CAACK,MAAR,CAAe,eAAf,EAAgC,YAAWH,WAA3C;AACH;;AAED,MAAMI,OAAO,GAAG;AACZN,IAAAA,OAAO,EAAPA,OADY;AAEZO,IAAAA,GAAG,EAAEf,YAAY,GAAGI,GAFR;AAGZC,IAAAA,MAAM,EAANA;AAHY,GAAhB;;AAMA,MAAGC,IAAI,IAAIC,MAAM,KAAK,kBAAtB,EAAyC;AACrCO,IAAAA,OAAO,CAACE,IAAR,GAAcC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAd;AACH,GAFD,MAEM;AACFQ,IAAAA,OAAO,CAACE,IAAR,GAAeV,IAAf;AACH;;AAED,SAAOa,KAAK,CAACL,OAAO,CAACC,GAAT,EAAcD,OAAd,CAAL,CAA4BM,IAA5B,CAAiC,UAACC,QAAD;AAAA,WACpCA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAACE,IAAD,EAAU;AAC3B,UAAGD,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvB,eAAOC,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACH;;AACD,aAAOA,IAAP;AACH,KALD,CADoC;AAAA,GAAjC,CAAP;AAOH;;AAED,OAAO,SAASI,eAAT,CAAyBC,IAAzB,EAA8B;AACjC,MAAMvB,GAAG,GAAG,OAAZ;AACA,SAAOH,KAAK,CAAC2B,GAAN,CAAUxB,GAAV,EAAeuB,IAAf,CAAP;AACH;AAED,OAAO,SAASE,YAAT,CAAsBF,IAAtB,EAA4B;AAC/B,MAAMvB,GAAG,gBAAT;AACA,SAAOH,KAAK,CAAC6B,IAAN,CAAW1B,GAAX,EAAgBuB,IAAhB,CAAP;AACH;AAED,OAAO,SAASI,cAAT,GAA0B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAOhC,KAAK,CAAC6B,IAAN,CAAW,cAAX,CAAP;AACH;AAED,OAAO,SAASI,YAAT,CAAsBC,MAAtB,EAA8B;AACjCH,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,SAAO9B,IAAI,CAAC,oBAAD,EAAuB,KAAvB,EAA8BgC,MAA9B,CAAJ,CACFf,IADE,CACG,UAACC,QAAD,EAAc;AAChB,QAAGA,QAAH,EAAa;AACTW,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BZ,QAA1B;AACH;;AACD,WAAOA,QAAP;AACH,GANE,CAAP;AAOH;AAGD,OAAO,SAASe,MAAT,CAAgBT,IAAhB,EAAsB;AACzB,SAAOxB,IAAI,CAAC,cAAD,EAAiB,MAAjB,EAAyBwB,IAAzB,CAAJ,CACFP,IADE,CACG,UAACC,QAAD,EAAc;AAChBW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAQ,CAACE,MAArB;;AACA,QAAGF,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA4B;AACxBc,MAAAA,KAAK,CAAC,iBAAD,CAAL;AAEH,KAHD,MAGO;AACHA,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACH;AACJ,GATE,CAAP;AAUH;AAID,OAAO,SAASC,YAAT,OAAgC;AAAA;;AAAA,MAATC,MAAS,QAATA,MAAS;AACnC,MAAMC,MAAM,GAAGtC,SAAS,EAAxB;AACA,SAAOC,IAAI,CAAC,gBAAD,EAAmB,MAAnB,EAA2BoC,MAA3B,CAAJ,CACFnB,IADE,CACG,UAACC,QAAD,EAAc;AAChBW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACAgB,IAAAA,KAAK,CAAC,iBAAD,CAAL;AACAG,IAAAA,MAAM,CAACC,OAAP,CAAe,GAAf;AAEH,GANE,CAAP;AAOH;;GATeH,Y;UACGpC,S;;;AAUnB,OAAO,SAASwC,gBAAT,QAAiC;AAAA;;AAAA,MAANC,IAAM,SAANA,IAAM;AACpC,MAAMrC,IAAI,GAAGqC,IAAb;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY3B,IAAZ;AACA,MAAMkC,MAAM,GAAGtC,SAAS,EAAxB;AACA,SAAOC,IAAI,CAAC,oBAAD,EAAuB,MAAvB,EAA+BG,IAA/B,EAAqC,kBAArC,CAAJ,CACFc,IADE,CACG,UAACC,QAAD,EAAc;AAChBW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACAmB,IAAAA,MAAM,CAACC,OAAP,CAAe,GAAf;AACH,GAJE,CAAP;AAKH;;IATeC,gB;UAGGxC,S;;;AAQnB,OAAO,SAAS0C,cAAT,GAA0B;AAE7B,SAAOzC,IAAI,CAAC,kBAAD,EAAqB,KAArB,CAAJ,CACFiB,IADE,CACG,UAACC,QAAD,EAAc;AAChB,QAAGA,QAAH,EAAa;AACTW,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BZ,QAA1B;AACH;;AACD,WAAOA,QAAP;AACH,GANE,CAAP;AAOH","sourcesContent":["import {API_BASE_URL} from './config.js';\nimport axios from \"axios\";\nimport {useRouter} from \"next/router\";\nfunction call(api, method, data, config){\n    let headers;\n\n    if(config === 'reviewInsertFile'){\n        headers = new Headers({});\n\n    }else{\n        headers = new Headers({\n             \"Content-Type\":\"application/json\",\n         });\n    }\n\n    const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n    if(accessToken && accessToken !== null){\n        headers.append(\"Authorization\", \"Bearer \"+ accessToken);\n    }\n\n    const options = {\n        headers,\n        url: API_BASE_URL + api,\n        method,\n    };\n\n    if(data && config !== 'reviewInsertFile'){\n        options.body= JSON.stringify(data);\n    }else {\n        options.body = data;\n    }\n\n    return fetch(options.url, options).then((response) =>\n        response.json().then((json) => {\n            if(response.status !== 200){\n                return Promise.reject(json);\n            }\n            return json;\n        }));\n}\n\nexport function loadUserRequest(user){\n    const api = \"/auth\";\n    return axios.get(api, user);\n}\n\nexport function logInRequest(user) {\n    const api = `/auth/login`\n    return axios.post(api, user);\n}\n\nexport function signOutRequest() {\n    console.log('signOutRequest');\n    return axios.post('/auth/logout');\n}\n\nexport function myreviewlist(userId) {\n    console.log('myreviewlist API Called');\n    return call(\"/review/userReview\", \"GET\", userId)\n        .then((response) => {\n            if(response) {\n                console.log(\"response: \", response);\n            }\n            return response;\n        });\n}\n\n\nexport function signup(user) {\n    return call(\"/auth/signup\", \"POST\", user)\n        .then((response) => {\n            console.log(response.status)\n            if(response.status === 200) {\n                alert(\"회원가입이 완료되었습니다:)\");\n\n            } else {\n                alert(\"회원가입에 실패하였습니다..\");\n            }\n        });\n}\n\n\n\nexport function reviewinsert({review}) {\n    const router = useRouter();\n    return call(\"/review/insert\", \"POST\", review)\n        .then((response) => {\n            console.log(response);\n            alert(\"리뷰등록이 완료되었습니다:)\");\n            router.replace('/');\n\n        });\n}\n\nexport function reviewfileinsert({file}){\n    const data = file;\n    console.log(data)\n    const router = useRouter();\n    return call(\"/review/insertFile\", \"POST\", data, 'reviewInsertFile')\n        .then((response) => {\n            console.log(response);\n            router.replace('/');\n        });\n}\n\nexport function restaurantlist() {\n\n    return call(\"/restaurant/list\", \"GET\")\n        .then((response) => {\n            if(response) {\n                console.log(\"response: \", response);\n            }\n            return response;\n        });\n}\n\n"]},"metadata":{},"sourceType":"module"}