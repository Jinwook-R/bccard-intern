{"ast":null,"code":"var _jsxFileName = \"/Users/jin/Desktop/bccard-intern/client/components/SearchInput.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { AutoComplete, Input } from 'antd';\nimport { useSelector } from \"react-redux\";\nconst {\n  Option\n} = AutoComplete;\n\nconst SearchInput = () => {\n  const {\n    0: result,\n    1: setResult\n  } = useState([]);\n  const restaurantList = useSelector(state => state.restaurant.restaurantList);\n\n  const handleSearch = value => {\n    const res = restaurantList.filter(restaurant => restaurant.id.includes(value + \"\")).map(restaurant => restaurant.id);\n    setResult(res);\n  };\n\n  return __jsx(AutoComplete, {\n    dropdownMatchSelectWidth: 252,\n    style: {\n      width: \"100%\"\n    },\n    onSearch: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, result.map((name, idx) => __jsx(Option, {\n    key: idx,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, name)), __jsx(Input, {\n    suffix: __jsx(Button, {\n      className: \"search-btn\",\n      style: {\n        marginRight: -12\n      },\n      size: \"large\",\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, __jsx(Icon, {\n      type: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SearchInput;","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/components/SearchInput.js"],"names":["React","useState","AutoComplete","Input","useSelector","Option","SearchInput","result","setResult","restaurantList","state","restaurant","handleSearch","value","res","filter","id","includes","map","width","name","idx","marginRight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,YAAR,EAAsBC,KAAtB,QAAkC,MAAlC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaH,YAAnB;;AAEA,MAAMI,WAAW,GAAG,MAAM;AAEtB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMQ,cAAc,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBF,cAA3B,CAAlC;;AAEA,QAAMG,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAMC,GAAG,GAAGL,cAAc,CACrBM,MADO,CACCJ,UAAD,IAAgBA,UAAU,CAACK,EAAX,CAAcC,QAAd,CAAuBJ,KAAK,GAAC,EAA7B,CADhB,EAEPK,GAFO,CAEFP,UAAD,IAAeA,UAAU,CAACK,EAFvB,CAAZ;AAGAR,IAAAA,SAAS,CAACM,GAAD,CAAT;AACH,GALD;;AAOA,SACI,MAAC,YAAD;AACI,IAAA,wBAAwB,EAAE,GAD9B;AAEI,IAAA,KAAK,EAAE;AACHK,MAAAA,KAAK,EAAE;AADJ,KAFX;AAKI,IAAA,QAAQ,EAAEP,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKL,MAAM,CAACW,GAAP,CAAW,CAACE,IAAD,EAAOC,GAAP,KACR,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,GAAb;AAAkB,IAAA,KAAK,EAAED,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IADL,CADH,CARL,EAaI,MAAC,KAAD;AACI,IAAA,MAAM,EACF,MAAC,MAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,KAAK,EAAE;AAAEE,QAAAA,WAAW,EAAE,CAAC;AAAhB,OAFX;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,IAAI,EAAC,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADJ;AA4BH,CAxCD;;AA0CA,eAAehB,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport {AutoComplete, Input} from 'antd';\nimport {useSelector} from \"react-redux\";\nconst { Option } = AutoComplete;\n\nconst SearchInput = () => {\n\n    const [result, setResult] = useState([]);\n    const restaurantList = useSelector(state => state.restaurant.restaurantList);\n\n    const handleSearch = (value) => {\n        const res = restaurantList\n            .filter((restaurant) => restaurant.id.includes(value+\"\"))\n            .map((restaurant)=> restaurant.id);\n        setResult(res);\n    };\n\n    return (\n        <AutoComplete\n            dropdownMatchSelectWidth={252}\n            style={{\n                width: \"100%\"\n            }}\n            onSearch={handleSearch}\n        >\n            {/*<Input.Search size=\"large\" placeholder=\"input here\" />*/}\n            {result.map((name, idx) => (\n                <Option key={idx} value={name}>\n                    {name}\n                </Option>\n            ))}\n            <Input\n                suffix={\n                    <Button\n                        className=\"search-btn\"\n                        style={{ marginRight: -12 }}\n                        size=\"large\"\n                        type=\"primary\"\n                    >\n                        <Icon type=\"search\" />\n                    </Button>\n                }\n            />\n        </AutoComplete>\n    );\n};\n\nexport default SearchInput;\n\n"]},"metadata":{},"sourceType":"module"}