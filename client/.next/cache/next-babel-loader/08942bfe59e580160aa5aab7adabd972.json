{"ast":null,"code":"import { loadUserRequest, logInRequest, signOutRequest, signup } from '../api/ApiService';\nimport { all, fork, takeEvery, call, put, delay } from 'redux-saga/effects';\nimport * as actions from '../reducers/user';\nimport { SIGN_IN_FAILURE, SIGN_IN_SUCCESS, SIGN_UP_SUCCESS, SIGN_OUT_FAILURE, SIGN_OUT_SUCCESS, LOAD_USER_SUCCESS } from \"../reducers/user\";\n\nfunction loadUserAPI(data) {\n  console.log('loadUserAPI start', data);\n  return loadUserRequest(data);\n}\n\nfunction signInAPI(data) {\n  return logInRequest(data);\n}\n\nfunction* loadUser({\n  payload\n}) {\n  try {\n    const {\n      id\n    } = payload;\n    const result = yield call(loadUserAPI, user);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      payload: result.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* signIn({\n  payload\n}) {\n  try {\n    const {\n      signInData\n    } = payload;\n    const result = yield call(signInAPI, signInData);\n    yield put({\n      type: SIGN_IN_SUCCESS,\n      payload: result.data\n    });\n  } catch (err) {\n    alert(err.response.data);\n    yield put({\n      type: SIGN_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return signup(data);\n}\n\nfunction* signUp({\n  payload\n}) {\n  try {\n    const {\n      signUpData\n    } = payload;\n    const result = yield call(signUpAPI, signUpData);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction signOutAPI() {\n  console.log('signOutRequestAPI Called');\n  return signOutRequest();\n}\n\nfunction* signOut() {\n  console.log('signOut');\n\n  try {\n    const result = yield call(signOutAPI);\n    yield put({\n      type: SIGN_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchSignIn() {\n  yield takeEvery(actions.SIGN_IN_REQUEST, signIn);\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(actions.SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchSignOut() {\n  yield takeEvery(actions.SIGN_OUT_REQUEST, signOut);\n}\n\nfunction* watchLoadUser() {\n  yield takeEvery(actions.LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchSignIn), fork(watchSignUp), fork(watchSignOut), fork(watchLoadUser)]);\n}","map":{"version":3,"sources":["/Users/bccard/Desktop/bccard-intern/client/sagas/user.js"],"names":["loadUserRequest","logInRequest","signOutRequest","signup","all","fork","takeEvery","call","put","delay","actions","SIGN_IN_FAILURE","SIGN_IN_SUCCESS","SIGN_UP_SUCCESS","SIGN_OUT_FAILURE","SIGN_OUT_SUCCESS","LOAD_USER_SUCCESS","loadUserAPI","data","console","log","signInAPI","loadUser","payload","id","result","user","type","error","signIn","signInData","err","alert","response","signUpAPI","signUp","signUpData","signOutAPI","signOut","watchSignIn","SIGN_IN_REQUEST","watchSignUp","SIGN_UP_REQUEST","watchSignOut","SIGN_OUT_REQUEST","watchLoadUser","LOAD_USER_REQUEST","userSaga"],"mappings":"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","sourcesContent":["import {loadUserRequest, logInRequest, signOutRequest, signup} from '../api/ApiService';\nimport { all, fork, takeEvery, call, put, delay } from 'redux-saga/effects';\nimport * as actions from '../reducers/user';\nimport {\n    SIGN_IN_FAILURE,\n    SIGN_IN_SUCCESS,\n    SIGN_UP_SUCCESS,\n    SIGN_OUT_FAILURE,\n    SIGN_OUT_SUCCESS,\n    LOAD_USER_SUCCESS\n} from \"../reducers/user\";\n\nfunction loadUserAPI(data) {\n    console.log('loadUserAPI start',data);\n    return loadUserRequest(data);\n}\n\nfunction signInAPI(data) {\n    return logInRequest(data);\n}\n\nfunction* loadUser({payload}) {\n     try {\n        const {id} = payload;\n        const result = yield call(loadUserAPI, user);\n        yield put({\n            type: LOAD_USER_SUCCESS,\n            payload: result.data,\n        });\n\n    }catch (error) {\n         console.log(error);\n    }\n}\n\nfunction* signIn({payload}) {\n    try {\n        const {signInData} = payload;\n        const result = yield call(signInAPI, signInData);\n        yield put({\n            type: SIGN_IN_SUCCESS,\n            payload: result.data,\n        });\n    } catch (err) {\n        alert(err.response.data);\n        yield put({\n            type: SIGN_IN_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction signUpAPI(data) {\n    return signup(data);\n}\n\nfunction* signUp({payload}) {\n    try {\n        const {signUpData} = payload;\n        const result = yield call(signUpAPI, signUpData);\n\n        yield put({\n            type: SIGN_UP_SUCCESS,\n            payload: result,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction signOutAPI() {\n    console.log('signOutRequestAPI Called');\n    return signOutRequest();\n}\n\nfunction* signOut() {\n    console.log('signOut');\n    try {\n        const result = yield call(signOutAPI);\n        yield put({\n            type: SIGN_OUT_SUCCESS,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: SIGN_OUT_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchSignIn() {\n    yield takeEvery(actions.SIGN_IN_REQUEST, signIn);\n}\n\nfunction* watchSignUp() {\n    yield takeEvery(actions.SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchSignOut() {\n    yield takeEvery(actions.SIGN_OUT_REQUEST, signOut);\n}\n\nfunction* watchLoadUser() {\n    yield takeEvery(actions.LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchSignIn),\n        fork(watchSignUp),\n        fork(watchSignOut),\n        fork(watchLoadUser),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}