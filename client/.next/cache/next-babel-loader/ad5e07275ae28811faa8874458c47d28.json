{"ast":null,"code":"import { API_BASE_URL } from './config.js';\n\nfunction call(api, method, data, config) {\n  var headers;\n\n  if (config === 'reviewInsertFile') {\n    headers = new Headers({});\n  } else {\n    headers = new Headers({\n      \"Content-Type\": \"application/json\"\n    });\n  }\n\n  var accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n\n  if (accessToken && accessToken !== null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n\n  var options = {\n    headers: headers,\n    url: API_BASE_URL + api,\n    method: method\n  };\n\n  if (data && config !== 'reviewInsertFile') {\n    options.body = JSON.stringify(data);\n  } else {\n    options.body = data;\n  }\n\n  return fetch(options.url, options).then(function (response) {\n    return response.json().then(function (json) {\n      if (response.status !== 200) {\n        return Promise.reject(json);\n      }\n\n      return json;\n    });\n  });\n}\n\nexport function loadUser(user) {\n  var headers = new Headers({\n    \"Content-Type\": \"application/json\"\n  });\n  var api = \"/auth\";\n  var method = \"GET\";\n  var options = {\n    headers: headers,\n    url: API_BASE_URL + api,\n    method: method\n  };\n  options.body = JSON.stringify(user);\n  return fetch(options.url, options).then(function (res) {\n    return res.json().then(function (json) {\n      console.log(res);\n\n      if (res.status !== 200) {\n        return Promise.reject(json);\n      }\n\n      alert();\n      return json;\n    });\n  });\n}\nexport function logIn(user) {\n  var headers = new Headers({\n    \"Content-Type\": \"application/json\"\n  });\n  var api = \"/auth/login\";\n  var method = \"POST\";\n  var options = {\n    headers: headers,\n    url: API_BASE_URL + api,\n    method: method\n  };\n  options.body = JSON.stringify(user);\n  return fetch(options.url, options).then(function (res) {\n    return res.json().then(function (json) {\n      console.log(res);\n\n      if (res.status !== 200) {\n        return Promise.reject(json);\n      }\n\n      return json;\n    });\n  });\n}\nexport function myreviewlist(userId) {\n  console.log('myreviewlist API Called');\n  return call(\"/review/userReview\", \"GET\", userId).then(function (response) {\n    if (response) {\n      console.log(\"response: \", response);\n    }\n\n    return response;\n  });\n}\nexport function signup(user) {\n  return call(\"/auth/signup\", \"POST\", user).then(function (response) {\n    console.log(response.status);\n\n    if (response.status === 200) {\n      alert(\"회원가입이 완료되었습니다:)\");\n      location.href = '/';\n    } else {\n      alert(\"회원가입에 실패하였습니다..\");\n    }\n  });\n}\nexport function signout() {\n  localStorage.setItem(\"ACCESS_TOKEN\", null);\n}\nexport function reviewinsert(_ref) {\n  var review = _ref.review;\n  return call(\"/review/insert\", \"POST\", review).then(function (response) {\n    console.log(response);\n    alert(\"리뷰등록이 완료되었습니다:)\");\n    location.href = '/';\n  });\n}\nexport function reviewfileinsert(_ref2) {\n  var file = _ref2.file;\n  var data = file;\n  console.log(data);\n  return call(\"/review/insertFile\", \"POST\", data, 'reviewInsertFile').then(function (response) {\n    console.log(response);\n    location.href = '/';\n  });\n}\nexport function restaurantlist() {\n  alert('!!');\n  return call(\"/restaurant/list\", \"GET\").then(function (response) {\n    if (response) {\n      console.log(\"response: \", response);\n    }\n\n    return response;\n  });\n}","map":{"version":3,"sources":["/Users/jin/Desktop/bi/client/api/ApiService.js"],"names":["API_BASE_URL","call","api","method","data","config","headers","Headers","accessToken","localStorage","getItem","append","options","url","body","JSON","stringify","fetch","then","response","json","status","Promise","reject","loadUser","user","res","console","log","alert","logIn","myreviewlist","userId","signup","location","href","signout","setItem","reviewinsert","review","reviewfileinsert","file","restaurantlist"],"mappings":"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","sourcesContent":["import {API_BASE_URL} from './config.js';\n\nfunction call(api, method, data, config){\n    let headers;\n\n    if(config === 'reviewInsertFile'){\n        headers = new Headers({});\n\n    }else{\n        headers = new Headers({\n             \"Content-Type\":\"application/json\",\n         });\n    }\n\n    const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n    if(accessToken && accessToken !== null){\n        headers.append(\"Authorization\", \"Bearer \"+ accessToken);\n    }\n\n    const options = {\n        headers,\n        url: API_BASE_URL + api,\n        method,\n    };\n\n    if(data && config !== 'reviewInsertFile'){\n        options.body= JSON.stringify(data);\n    }else {\n        options.body = data;\n    }\n\n    return fetch(options.url, options).then((response) =>\n        response.json().then((json) => {\n            if(response.status !== 200){\n                return Promise.reject(json);\n            }\n            return json;\n        }));\n}\n\nexport function loadUser(user){\n\n    const headers = new Headers({\"Content-Type\":\"application/json\"});\n    const api = \"/auth\"\n    const method = \"GET\"\n    const options = {\n        headers,\n        url: API_BASE_URL + api,\n        method\n    };\n\n    options.body = JSON.stringify(user);\n\n    return fetch(options.url, options).then((res) =>\n        res.json().then((json) => {\n            console.log(res);\n            if(res.status !== 200){\n                return Promise.reject(json);\n            }\n            alert();\n            return json;\n        }));\n\n}\n\nexport function logIn(user) {\n\n    const headers = new Headers({\"Content-Type\":\"application/json\"});\n    const api = \"/auth/login\"\n    const method = \"POST\"\n    const options = {\n        headers,\n        url: API_BASE_URL + api,\n        method,\n    };\n\n    options.body = JSON.stringify(user);\n\n    return fetch(options.url, options).then((res) =>\n        res.json().then((json) => {\n            console.log(res);\n            if(res.status !== 200){\n                return Promise.reject(json);\n            }\n            return json;\n        }));\n}\n\nexport function myreviewlist(userId) {\n    console.log('myreviewlist API Called')\n    return call(\"/review/userReview\", \"GET\", userId)\n        .then((response) => {\n            if(response) {\n                console.log(\"response: \", response);\n            }\n            return response;\n        });\n}\n\n\nexport function signup(user) {\n    return call(\"/auth/signup\", \"POST\", user)\n        .then((response) => {\n            console.log(response.status)\n            if(response.status === 200) {\n                alert(\"회원가입이 완료되었습니다:)\");\n                location.href = '/'\n            } else {\n                alert(\"회원가입에 실패하였습니다..\");\n            }\n        });\n}\n\nexport function signout() {\n    localStorage.setItem(\"ACCESS_TOKEN\", null);\n}\n\nexport function reviewinsert({review}) {\n    return call(\"/review/insert\", \"POST\", review)\n        .then((response) => {\n            console.log(response);\n            alert(\"리뷰등록이 완료되었습니다:)\");\n            location.href = '/';\n        });\n}\n\nexport function reviewfileinsert({file}){\n    const data = file;\n    console.log(data)\n    return call(\"/review/insertFile\", \"POST\", data, 'reviewInsertFile')\n        .then((response) => {\n            console.log(response);\n            location.href = '/';\n        });\n}\n\nexport function restaurantlist() {\n    alert('!!');\n    return call(\"/restaurant/list\", \"GET\")\n        .then((response) => {\n            if(response) {\n                console.log(\"response: \", response);\n            }\n            return response;\n        });\n}\n\n"]},"metadata":{},"sourceType":"module"}