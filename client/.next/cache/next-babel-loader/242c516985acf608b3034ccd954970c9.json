{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst mockUser = {\n  nickname: 'MockUserRedux',\n  Post: [],\n  Followings: [],\n  Followers: [],\n  id: 1\n};\nexport const initialState = {\n  isLoggedIn: false,\n  // 로그인 여부\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 실패 사유\n  isSignedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패 사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null // 남의 정보\n\n}; // Action types\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const SIGN_IN_REQUEST = 'SIGN_IN_REQUEST';\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport const SIGN_IN_FAILURE = 'SIGN_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // Actions creators\n\nexport const signUpRequestAction = data => ({\n  type: SIGN_UP_REQUEST,\n  payload: {\n    signUpData: data\n  }\n});\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  payload: {\n    loginData: data\n  }\n});\nexport const logoutRequestAction = () => ({\n  type: LOG_OUT_REQUEST\n}); // reducers\n\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload,\n    error\n  } = action;\n\n  switch (type) {\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isSigningUp: true,\n          isSignedUp: false,\n          signUpErrorReason: ''\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isSigningUp: false,\n          signUpErrorReason: error\n        });\n      }\n\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true,\n        logInErrorReason: ''\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: mockUser,\n        isLoading: false\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false,\n        logInErrorReason: error,\n        me: null\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        isLoggingOut: false,\n        me: {}\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/reducers/user.js"],"names":["mockUser","nickname","Post","Followings","Followers","id","initialState","isLoggedIn","isLoggingOut","isLoggingIn","logInErrorReason","isSignedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","signUpRequestAction","data","type","payload","signUpData","loginRequestAction","LOG_IN_REQUEST","loginData","logoutRequestAction","state","action","error","LOG_IN_SUCCESS","isLoading","LOG_IN_FAILURE"],"mappings":"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","sourcesContent":["const mockUser = {\n    nickname: 'MockUserRedux',\n    Post: [],\n    Followings: [],\n    Followers: [],\n    id: 1,\n};\n\nexport const initialState = {\n    isLoggedIn: false, // 로그인 여부\n    isLoggingOut: false, // 로그아웃 시도중\n    isLoggingIn: false, // 로그인 시도중\n    logInErrorReason: '', // 로그인 실패 사유\n    isSignedUp: false, // 회원가입 성공\n    isSigningUp: false, // 회원가입 시도중\n    signUpErrorReason: '', // 회원가입 실패 사유\n    me: null, // 내 정보\n    followingList: [], // 팔로잉 리스트\n    followerList: [], // 팔로워 리스트\n    userInfo: null, // 남의 정보\n};\n\n// Action types\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const SIGN_IN_REQUEST = 'SIGN_IN_REQUEST';\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport const SIGN_IN_FAILURE = 'SIGN_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\n// Actions creators\nexport const signUpRequestAction = data => ({\n    type: SIGN_UP_REQUEST,\n    payload: {\n        signUpData: data,\n    },\n});\n\nexport const loginRequestAction = data => ({\n    type: LOG_IN_REQUEST,\n    payload: {\n        loginData: data,\n    },\n});\n\nexport const logoutRequestAction = () => ({\n    type: LOG_OUT_REQUEST,\n});\n\n// reducers\nexport default (state = initialState, action) => {\n    const { type, payload, error } = action;\n\n    switch (type) {\n        case SIGN_UP_REQUEST: {\n            return {\n                ...state,\n                isSigningUp: true,\n                isSignedUp: false,\n                signUpErrorReason: '',\n            };\n        }\n        case SIGN_UP_SUCCESS: {\n            return {\n                ...state,\n                isSigningUp: false,\n                isSignedUp: true,\n            };\n        }\n        case SIGN_UP_FAILURE: {\n            return {\n                ...state,\n                isSigningUp: false,\n                signUpErrorReason: error,\n            };\n        }\n        case LOG_IN_REQUEST:\n            return {\n                ...state,\n                isLoggingIn: true,\n                logInErrorReason: '',\n            };\n        case LOG_IN_SUCCESS:\n            return {\n                ...state,\n                isLoggingIn: false,\n                isLoggedIn: true,\n                me: mockUser,\n                isLoading: false,\n            };\n        case LOG_IN_FAILURE:\n            return {\n                ...state,\n                isLoggingIn: false,\n                isLoggedIn: false,\n                logInErrorReason: error,\n                me: null,\n            };\n        case LOG_OUT_REQUEST:\n            return {\n                ...state,\n                isLoggingOut: true,\n            };\n        case LOG_OUT_SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: false,\n                isLoggingOut: false,\n                me: {},\n            };\n        case LOG_OUT_FAILURE:\n            return {\n                ...state,\n                isLoggingOut: false,\n            };\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}