{"ast":null,"code":"var _jsxFileName = \"/Users/bccard/Desktop/bccard-intern/client/components/Category.js\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Card, Row, Col } from 'antd';\nimport Link from \"next/link\";\nimport { useSelector } from \"react-redux\";\nimport { API_BASE_URL } from \"../api/config\";\nimport styled from \"styled-components\";\nconst StyledImgWrapper = styled.div`\n  position: relative;\n  display: block;\n  &::before {\n      content: \"\";\n      padding-top: 100%;\n      display: block;\n  }\n  img {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      margin: auto;\n  }\n`;\nexport const Category = ({\n  title,\n  type\n}) => {\n  const {\n    Meta\n  } = Card;\n  let restaurantList = useSelector(state => state.restaurant.restaurantList);\n  let count = 0;\n\n  const handleCardClick = e => {};\n\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, title), !type && __jsx(Row, {\n    gutter: [10, 10],\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  }, restaurantList === null || restaurantList === void 0 ? void 0 : restaurantList.map((e, idx) => {\n    if (idx < 6) {\n      var _e$fileInfoList$;\n\n      return __jsx(Col, {\n        xs: 24,\n        md: 12,\n        lg: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }\n      }, __jsx(Link, {\n        href: {\n          pathname: '/restaurant',\n          query: {\n            id: e.id\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }\n      }, __jsx(React.Fragment, null, __jsx(StyledImgWrapper, {\n        className: \".img-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }\n      }, __jsx(\"img\", {\n        src: API_BASE_URL + `/file/restaurant/img?fileNo=${(_e$fileInfoList$ = e.fileInfoList[0]) === null || _e$fileInfoList$ === void 0 ? void 0 : _e$fileInfoList$.fileNo}`,\n        onClick: handleCardClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 41\n        }\n      })), __jsx(Meta, {\n        title: e.name,\n        description: \"www.aslwdf.com\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }\n      }))));\n    } else {\n      return null;\n    }\n  })), type && __jsx(Row, {\n    gutter: [10, 10],\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 22\n    }\n  }, restaurantList === null || restaurantList === void 0 ? void 0 : restaurantList.map((e, idx) => {\n    if (count < 6 && e.type === type) {\n      return __jsx(Col, {\n        xs: 24,\n        md: 12,\n        lg: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }, __jsx(Link, {\n        href: {\n          pathname: '/restaurant',\n          query: {\n            id: e.id\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }\n      }, __jsx(StyledImgWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 37\n        }\n      }, __jsx(Meta, {\n        title: e.name,\n        description: \"www.aslwdf.com\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }\n      })))));\n    } else {\n      return null;\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/bccard/Desktop/bccard-intern/client/components/Category.js"],"names":["React","Card","Row","Col","Link","useSelector","API_BASE_URL","styled","StyledImgWrapper","div","Category","title","type","Meta","restaurantList","state","restaurant","count","handleCardClick","e","width","map","idx","pathname","query","id","fileInfoList","fileNo","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Card, Row, Col} from 'antd';\nimport Link from \"next/link\";\nimport {useSelector} from \"react-redux\";\nimport {API_BASE_URL} from \"../api/config\";\nimport styled from \"styled-components\";\n\n\nconst StyledImgWrapper = styled.div`\n  position: relative;\n  display: block;\n  &::before {\n      content: \"\";\n      padding-top: 100%;\n      display: block;\n  }\n  img {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      margin: auto;\n  }\n`\n\n\nexport const Category = ({title, type}) => {\n    const {Meta} = Card;\n\n    let restaurantList = useSelector(state => state.restaurant.restaurantList);\n    let count = 0;\n\n    const handleCardClick = (e) => {\n\n    };\n\n    return (\n        <>\n            <h2>{title}</h2>\n            {!type && <Row gutter={[10, 10]} style={{width: \"100%\"}}>\n                {restaurantList?.map((e, idx) => {\n                    if (idx < 6) {\n                        return (<Col xs={24} md={12} lg={8}>\n                            <Link href={{\n                                pathname: '/restaurant',\n                                query: {id: e.id},\n                            }}>\n                                <>\n                                    <StyledImgWrapper className=\".img-wrapper\">\n                                        <img\n                                            src={API_BASE_URL + `/file/restaurant/img?fileNo=${e.fileInfoList[0]?.fileNo}`}\n                                            onClick={handleCardClick}\n                                        />\n                                    </StyledImgWrapper>\n                                    <Meta title={e.name} description=\"www.aslwdf.com\"/>\n                                </>\n                            </Link>\n                        </Col>);\n                    } else {\n                        return null;\n                    }\n                    })\n                }\n            </Row>\n            }\n            {type && <Row gutter={[10, 10]} style={{width: \"100%\"}}>\n                {restaurantList?.map((e, idx) => {\n                    if (count < 6 && (e.type === type)) {\n                        return (<Col xs={24} md={12} lg={8}>\n                            <Link href={{\n                                pathname: '/restaurant',\n                                query: {id: e.id},\n                            }}>\n                                <a>\n                                    <StyledImgWrapper>\n                                        <Meta title={e.name} description=\"www.aslwdf.com\"/>\n                                    </StyledImgWrapper>\n                                </a>\n                            </Link>\n                        </Col>);\n                    } else {\n                        return null;\n                    }\n                    })\n                }\n            </Row>\n            }\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}