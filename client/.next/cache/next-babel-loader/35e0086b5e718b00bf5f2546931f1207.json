{"ast":null,"code":"import { restaurantlist } from '../api/ApiService';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport * as actions from '../reducers/user';\nimport { SIGN_IN_FAILURE } from \"../reducers/user\";\nimport { RESTAURANT_LIST_SUCCESS } from \"../reducers/restaurant\";\n\nfunction restaurantListAPI() {\n  return restaurantlist();\n}\n\nfunction* restaurantList() {\n  try {\n    const result = yield call(restaurantListAPI);\n    yield put({\n      //put -> dispatch와 동일\n      type: RESTAURANT_LIST_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    alert(err.error);\n    yield put({\n      type: SIGN_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchSignIn() {\n  yield takeEvery(actions.SIGN_IN_REQUEST, signIn); // yield takeEvery(actions.SIGN_OUT_REQUEST, signOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchSignIn) // fork(watchSignUp),\n  ]);\n}","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/sagas/restaurant.js"],"names":["restaurantlist","all","fork","takeEvery","call","put","actions","SIGN_IN_FAILURE","RESTAURANT_LIST_SUCCESS","restaurantListAPI","restaurantList","result","type","payload","err","alert","error","response","data","watchSignIn","SIGN_IN_REQUEST","signIn","userSaga"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,mBAA7B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,GAArC,QAAgD,oBAAhD;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,SAAQC,eAAR,QAA8B,kBAA9B;AACA,SAAQC,uBAAR,QAAsC,wBAAtC;;AAEA,SAASC,iBAAT,GAA6B;AACzB,SAAOT,cAAc,EAArB;AACH;;AAED,UAAUU,cAAV,GAA2B;AACvB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMP,IAAI,CAACK,iBAAD,CAAzB;AACA,UAAMJ,GAAG,CAAC;AAAE;AACRO,MAAAA,IAAI,EAAEJ,uBADA;AAENK,MAAAA,OAAO,EAAEF;AAFH,KAAD,CAAT;AAKH,GAPD,CAOE,OAAOG,GAAP,EAAY;AACVC,IAAAA,KAAK,CAACD,GAAG,CAACE,KAAL,CAAL;AACA,UAAMX,GAAG,CAAC;AACNO,MAAAA,IAAI,EAAEL,eADA;AAENS,MAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUC,WAAV,GAAwB;AACpB,QAAMhB,SAAS,CAACG,OAAO,CAACc,eAAT,EAA0BC,MAA1B,CAAf,CADoB,CAEpB;AACH;;AAED,eAAe,UAAUC,QAAV,GAAqB;AAChC,QAAMrB,GAAG,CAAC,CACNC,IAAI,CAACiB,WAAD,CADE,CAEN;AAFM,GAAD,CAAT;AAIH","sourcesContent":["import {restaurantlist} from '../api/ApiService';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport * as actions from '../reducers/user';\nimport {SIGN_IN_FAILURE} from \"../reducers/user\";\nimport {RESTAURANT_LIST_SUCCESS} from \"../reducers/restaurant\";\n\nfunction restaurantListAPI() {\n    return restaurantlist();\n}\n\nfunction* restaurantList() {\n    try {\n        const result = yield call(restaurantListAPI);\n        yield put({ //put -> dispatch와 동일\n            type: RESTAURANT_LIST_SUCCESS,\n            payload: result,\n        });\n\n    } catch (err) {\n        alert(err.error);\n        yield put({\n            type: SIGN_IN_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchSignIn() {\n    yield takeEvery(actions.SIGN_IN_REQUEST, signIn);\n    // yield takeEvery(actions.SIGN_OUT_REQUEST, signOut);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchSignIn),\n        // fork(watchSignUp),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}