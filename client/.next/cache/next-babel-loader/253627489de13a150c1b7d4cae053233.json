{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyUser = {\n  email: 1,\n  username: '제로초',\n  bearerToken: \"aaaaaaaaa\"\n};\nexport const initialState = {\n  loadMyInfoLoading: false,\n  // 유저 정보 가져오기 시도중\n  loadMyInfoDone: false,\n  loadMyInfoError: null,\n  loadUserLoading: false,\n  // 유저 정보 가져오기 시도중\n  loadUserDone: false,\n  loadUserError: null,\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  unfollowError: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  loadFollowingsLoading: false,\n  loadFollowingsDone: false,\n  loadFollowingsError: null,\n  loadFollowersLoading: false,\n  loadFollowersDone: false,\n  loadFollowersError: null,\n  removeFollowerLoading: false,\n  removeFollowerDone: false,\n  removeFollowerError: null,\n  me: null,\n  userInfo: null\n};\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_IN = 'SIGN_IN'; // 액션의 이름\n\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS'; // 액션의 이름\n\nexport const SIGN_IN_FAILURE = 'SIGN_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const signUpAction = data => {\n  return {\n    type: SIGN_UP,\n    data\n  };\n};\nexport const signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\nexport const loginAction = data => {\n  return {\n    type: SIGN_IN_IN,\n    data\n  };\n};\nexport const logoutAction = {\n  type: LOG_OUT\n};\nexport const signUp = data => {\n  return {\n    type: SIGN_UP,\n    data\n  };\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: true,\n          user: dummyUser,\n          loginData: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/reducers/user.js"],"names":["dummyUser","email","username","bearerToken","initialState","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","loadUserLoading","loadUserDone","loadUserError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","loadFollowersLoading","loadFollowersDone","loadFollowersError","removeFollowerLoading","removeFollowerDone","removeFollowerError","me","userInfo","SIGN_UP","SIGN_UP_SUCCESS","SIGN_IN","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","LOG_OUT","signUpAction","data","type","signUpSuccess","loginAction","SIGN_IN_IN","logoutAction","signUp","state","action","isLoggedIn","user","loginData","signUpData"],"mappings":"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","sourcesContent":["const dummyUser = {\n    email: 1,\n    username: '제로초',\n    bearerToken: \"aaaaaaaaa\",\n};\n\nexport const initialState = {\n    loadMyInfoLoading: false, // 유저 정보 가져오기 시도중\n    loadMyInfoDone: false,\n    loadMyInfoError: null,\n    loadUserLoading: false, // 유저 정보 가져오기 시도중\n    loadUserDone: false,\n    loadUserError: null,\n    followLoading: false, // 팔로우 시도중\n    followDone: false,\n    followError: null,\n    unfollowLoading: false, // 언팔로우 시도중\n    unfollowDone: false,\n    unfollowError: null,\n    logInLoading: false, // 로그인 시도중\n    logInDone: false,\n    logInError: null,\n    logOutLoading: false, // 로그아웃 시도중\n    logOutDone: false,\n    logOutError: null,\n    signUpLoading: false, // 회원가입 시도중\n    signUpDone: false,\n    signUpError: null,\n    changeNicknameLoading: false, // 닉네임 변경 시도중\n    changeNicknameDone: false,\n    changeNicknameError: null,\n    loadFollowingsLoading: false,\n    loadFollowingsDone: false,\n    loadFollowingsError: null,\n    loadFollowersLoading: false,\n    loadFollowersDone: false,\n    loadFollowersError: null,\n    removeFollowerLoading: false,\n    removeFollowerDone: false,\n    removeFollowerError: null,\n    me: null,\n    userInfo: null,\n};\n\n\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_IN = 'SIGN_IN'; // 액션의 이름\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS'; // 액션의 이름\nexport const SIGN_IN_FAILURE = 'SIGN_IN_FAILURE'; // 액션의 이름\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const signUpAction = (data) => {\n    return {\n        type: SIGN_UP,\n        data,\n    };\n};\n\nexport const signUpSuccess = {\n    type: SIGN_UP_SUCCESS,\n};\n\nexport const loginAction = (data) => {\n    return {\n        type: SIGN_IN_IN,\n        data,\n    }\n};\n\nexport const logoutAction = {\n    type: LOG_OUT,\n};\n\nexport const signUp = (data) => {\n    return {\n        type: SIGN_UP,\n        data,\n    }\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SIGN_IN: {\n            return {\n                ...state,\n                isLoggedIn: true,\n                user: dummyUser,\n                loginData: action.data,\n            };\n        }\n        case LOG_OUT: {\n            return {\n                ...state,\n                isLoggedIn: false,\n                user: null,\n            };\n        }\n        case SIGN_UP: {\n            return {\n                ...state,\n                signUpData: action.data,\n            };\n        }\n        default: {\n            return {\n                ...state,\n            }\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}