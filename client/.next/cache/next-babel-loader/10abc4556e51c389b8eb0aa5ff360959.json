{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/bccard/Desktop/bccard-intern/client/pages/reviewRegister.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useState, useEffect } from \"react\";\nimport { withRouter } from \"next/router\";\n\nvar ReviewRegister = function ReviewRegister() {\n  _s();\n\n  var _useState = useState(''),\n      selectedFiles = _useState[0],\n      setSelectedFiles = _useState[1];\n\n  var onClickHandler = function onClickHandler(event) {\n    var formData = new FormData();\n    formData.append(\"uploadImages\", _this.state.selectedFiles, _this.state.selectedFiles.name);\n    var config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    }; // axios.post(`uploadAPI`, formData, config);\n  };\n\n  var fileChangedHandler = function fileChangedHandler(event) {\n    var files = event.target.files;\n\n    _this.setState({\n      selectedFiles: files\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"App\",\n    style: {\n      marginTop: \"100px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    onChange: fileChangedHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: onClickHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"\\uC800\\uC7A5\\uD558\\uAE30\"));\n};\n\n_s(ReviewRegister, \"BgXsdTmUwPZyooIq0wWQg+gTKns=\");\n\n_c = ReviewRegister;\nexport default _c2 = withRouter(ReviewRegister);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReviewRegister\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/bccard/Desktop/bccard-intern/client/pages/reviewRegister.js"],"names":["React","useCallback","useRef","useState","useEffect","withRouter","ReviewRegister","selectedFiles","setSelectedFiles","onClickHandler","event","formData","FormData","append","state","name","config","headers","fileChangedHandler","files","target","setState","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IACIC,WADJ,EAEIC,MAFJ,EAGIC,QAHJ,EAIIC,SAJJ,QAKO,OALP;AAMA,SAAQC,UAAR,QAAyB,aAAzB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAEzB,kBAA0CH,QAAQ,CAAC,EAAD,CAAlD;AAAA,MAAOI,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC5B,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CACI,cADJ,EAEI,KAAI,CAACC,KAAL,CAAWP,aAFf,EAGI,KAAI,CAACO,KAAL,CAAWP,aAAX,CAAyBQ,IAH7B;AAKA,QAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf,CAP4B,CAY5B;AACH,GAbD;;AAeA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAR,KAAK,EAAI;AAChC,QAAMS,KAAK,GAAGT,KAAK,CAACU,MAAN,CAAaD,KAA3B;;AACA,IAAA,KAAI,CAACE,QAAL,CAAc;AACVd,MAAAA,aAAa,EAAEY;AADL,KAAd;AAGH,GALD;;AAOI,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAE;AAAb,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,QAAQ,EAAEJ,kBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAET,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,CADJ;AAMP,CAhCD;;GAAMH,c;;KAAAA,c;AAkCN,qBAAeD,UAAU,CAACC,cAAD,CAAzB","sourcesContent":["import React, {\n    useCallback,\n    useRef,\n    useState,\n    useEffect\n} from \"react\";\nimport {withRouter} from \"next/router\";\n\nconst ReviewRegister = () => {\n\n    const [selectedFiles, setSelectedFiles] = useState('');\n\n    const onClickHandler = event => {\n        const formData = new FormData();\n        formData.append(\n            \"uploadImages\",\n            this.state.selectedFiles,\n            this.state.selectedFiles.name\n        );\n        const config = {\n            headers: {\n                \"content-type\": \"multipart/form-data\"\n            }\n        };\n        // axios.post(`uploadAPI`, formData, config);\n    };\n\n    const fileChangedHandler = event => {\n        const files = event.target.files;\n        this.setState({\n            selectedFiles: files\n        });\n    };\n\n        return (\n            <div className=\"App\" style={{ marginTop: \"100px\" }}>\n                <input type=\"file\" multiple onChange={fileChangedHandler} />\n                <button onClick={onClickHandler}>저장하기</button>\n            </div>\n        );\n};\n\nexport default withRouter(ReviewRegister);\n"]},"metadata":{},"sourceType":"module"}