{"ast":null,"code":"import { logIn, signup } from '../api/ApiService';\nimport { all, fork, takeEvery, call, put, delay } from 'redux-saga/effects';\nimport * as actions from '../reducers/user';\nimport { SIGN_IN_FAILURE, SIGN_IN_SUCCESS, SIGN_UP_SUCCESS, SIGN_OUT_FAILURE, SIGN_OUT_SUCCESS } from \"../reducers/user\";\nexport const initialState = {\n  user: null,\n  signInLoading: false,\n  signInSucceed: false,\n  signInError: null\n};\n\nfunction loadUserAPI(data) {\n  return loadUser(data);\n}\n\nfunction signInAPI(data) {\n  return logIn(data);\n}\n\nfunction* loadUser({\n  payload\n}) {\n  try {} catch (error) {}\n}\n\nfunction* signIn({\n  payload\n}) {\n  try {\n    const {\n      signInData\n    } = payload;\n    const result = yield call(signInAPI, signInData);\n    yield put({\n      type: SIGN_IN_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: SIGN_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return signup(data);\n}\n\nfunction* signUp({\n  payload\n}) {\n  try {\n    const {\n      signUpData\n    } = payload;\n    const result = yield call(signUpAPI, signUpData);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction signOutAPI() {// return signout();\n}\n\nfunction* signOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: SIGN_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchSignIn() {\n  yield takeEvery(actions.SIGN_IN_REQUEST, signIn);\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(actions.SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchSignIn), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/jin/Desktop/bi/client/sagas/user.js"],"names":["logIn","signup","all","fork","takeEvery","call","put","delay","actions","SIGN_IN_FAILURE","SIGN_IN_SUCCESS","SIGN_UP_SUCCESS","SIGN_OUT_FAILURE","SIGN_OUT_SUCCESS","initialState","user","signInLoading","signInSucceed","signInError","loadUserAPI","data","loadUser","signInAPI","payload","error","signIn","signInData","result","type","err","console","log","response","signUpAPI","signUp","signUpData","signOutAPI","signOut","watchSignIn","SIGN_IN_REQUEST","watchSignUp","SIGN_UP_REQUEST","userSaga"],"mappings":"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","sourcesContent":["import {logIn, signup} from '../api/ApiService';\nimport { all, fork, takeEvery, call, put, delay } from 'redux-saga/effects';\nimport * as actions from '../reducers/user';\nimport {SIGN_IN_FAILURE, SIGN_IN_SUCCESS, SIGN_UP_SUCCESS, SIGN_OUT_FAILURE, SIGN_OUT_SUCCESS} from \"../reducers/user\";\n\nexport const initialState = {\n    user: null,\n    signInLoading: false,\n    signInSucceed: false,\n    signInError: null\n}\n\nfunction loadUserAPI(data) {\n    return loadUser(data);\n}\n\nfunction signInAPI(data) {\n    return logIn(data);\n}\n\nfunction* loadUser({payload}) {\n\n    try {\n\n    }catch (error) {\n        \n    }\n\n}\n\nfunction* signIn({payload}) {\n    try {\n        const {signInData} = payload;\n        const result = yield call(signInAPI, signInData);\n        yield put({\n            type: SIGN_IN_SUCCESS,\n            payload: result,\n        });\n    } catch (err) {\n        console.log(err);\n        yield put({\n            type: SIGN_IN_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction signUpAPI(data) {\n    return signup(data);\n}\n\nfunction* signUp({payload}) {\n    try {\n        const {signUpData} = payload;\n        const result = yield call(signUpAPI, signUpData);\n\n        yield put({\n            type: SIGN_UP_SUCCESS,\n            payload: result,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction signOutAPI() {\n    // return signout();\n}\n\nfunction* signOut() {\n    try {\n        // const result = yield call(logOutAPI);\n        yield delay(1000);\n        yield put({\n            type: SIGN_OUT_SUCCESS,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: SIGN_OUT_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchSignIn() {\n    yield takeEvery(actions.SIGN_IN_REQUEST, signIn);\n}\n\nfunction* watchSignUp() {\n    yield takeEvery(actions.SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchSignIn),\n        fork(watchSignUp),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}