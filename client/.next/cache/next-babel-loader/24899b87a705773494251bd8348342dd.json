{"ast":null,"code":"var _jsxFileName = \"/Users/jin/Desktop/bccard-intern/client/components/SearchInput.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Input, AutoComplete } from 'antd';\nimport { useSelector } from \"react-redux\";\nimport { Option } from \"antd/es/mentions\";\n\nconst SearchInput = () => {\n  const {\n    0: result,\n    1: setResult\n  } = useState([]);\n  const restaurantList = useSelector(state => state.restaurant.restaurantList);\n\n  const handleSearch = value => {\n    let res = [];\n    res = restaurantList.map(name => name.includes(value)); // if (!value || value.indexOf('@') >= 0) {\n    //     res = [];\n    // } else {\n    // }\n\n    setResult(res);\n  };\n\n  return __jsx(AutoComplete, {\n    dropdownMatchSelectWidth: 252,\n    style: {\n      width: \"100%\"\n    },\n    onSearch: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, result.map(email => __jsx(Option, {\n    key: email,\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, email)));\n};\n\nexport default SearchInput;","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/components/SearchInput.js"],"names":["React","useState","Input","AutoComplete","useSelector","Option","SearchInput","result","setResult","restaurantList","state","restaurant","handleSearch","value","res","map","name","includes","width","email"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,MAApC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,MAAR,QAAqB,kBAArB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMQ,cAAc,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBF,cAA3B,CAAlC;;AAEA,QAAMG,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIC,GAAG,GAAG,EAAV;AACAA,IAAAA,GAAG,GAAGL,cAAc,CAACM,GAAf,CAAoBC,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAcJ,KAAd,CAA7B,CAAN,CAF4B,CAI5B;AACA;AACA;AAEA;;AAEAL,IAAAA,SAAS,CAACM,GAAD,CAAT;AACH,GAXD;;AAaA,SACI,MAAC,YAAD;AACI,IAAA,wBAAwB,EAAE,GAD9B;AAEI,IAAA,KAAK,EAAE;AACHI,MAAAA,KAAK,EAAE;AADJ,KAFX;AAKI,IAAA,QAAQ,EAAEN,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKL,MAAM,CAACQ,GAAP,CAAYI,KAAD,IACR,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KADL,CADH,CAPL,CADJ;AAeH,CAjCD;;AAmCA,eAAeb,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Input, AutoComplete } from 'antd';\nimport {useSelector} from \"react-redux\";\nimport {Option} from \"antd/es/mentions\";\n\nconst SearchInput = () => {\n\n    const [result, setResult] = useState([]);\n    const restaurantList = useSelector(state => state.restaurant.restaurantList);\n\n    const handleSearch = (value) => {\n        let res = [];\n        res = restaurantList.map((name) => name.includes(value));\n\n        // if (!value || value.indexOf('@') >= 0) {\n        //     res = [];\n        // } else {\n\n        // }\n\n        setResult(res);\n    };\n\n    return (\n        <AutoComplete\n            dropdownMatchSelectWidth={252}\n            style={{\n                width: \"100%\"\n            }}\n            onSearch={handleSearch}\n        >\n            {result.map((email) => (\n                <Option key={email} value={email}>\n                    {email}\n                </Option>\n            ))}\n        </AutoComplete>\n    );\n};\n\nexport default SearchInput;\n\n"]},"metadata":{},"sourceType":"module"}