{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(reviewInsert),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchReviewInsert),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(reviewSaga);\n\nimport { reviewinsert } from '../api/ApiService';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport * as actions from '../reducers/review';\nimport { REVIEW_REGISTER_SUCCESS, REVIEW_REGISTER_FAILURE } from \"../reducers/review\";\n\nfunction reviewInsertAPI(data) {\n  return reviewinsert(data);\n}\n\nfunction reviewInsert(_ref) {\n  var payload, review, result;\n  return _regeneratorRuntime.wrap(function reviewInsert$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          review = payload;\n          console.log(review);\n          return _context.abrupt(\"return\");\n\n        case 7:\n          result = _context.sent;\n          _context.next = 10;\n          return put({\n            type: REVIEW_REGISTER_SUCCESS,\n            payload: result\n          });\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 16;\n          return put({\n            type: REVIEW_REGISTER_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 12]]);\n}\n\nfunction watchReviewInsert() {\n  return _regeneratorRuntime.wrap(function watchReviewInsert$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actions.REVIEW_REGISTER_REQUEST, reviewInsert);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function reviewSaga() {\n  return _regeneratorRuntime.wrap(function reviewSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchReviewInsert)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/bccard/Desktop/bccard-intern/client/sagas/review.js"],"names":["reviewInsert","watchReviewInsert","reviewSaga","reviewinsert","all","fork","takeEvery","call","put","actions","REVIEW_REGISTER_SUCCESS","REVIEW_REGISTER_FAILURE","reviewInsertAPI","data","payload","review","console","log","result","type","error","response","REVIEW_REGISTER_REQUEST"],"mappings":";;oDASUA,Y;qDAkBAC,iB;qDAIeC,U;;AA/BzB,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,GAArC,QAAgD,oBAAhD;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,oBAA/D;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC3B,SAAOV,YAAY,CAACU,IAAD,CAAnB;AACH;;AAED,SAAUb,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBc,UAAAA,OAAzB,QAAyBA,OAAzB;AAAA;AAEcC,UAAAA,MAFd,GAEuBD,OAFvB;AAGQE,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAHR;;AAAA;AAKcG,UAAAA,MALd;AAAA;AAMQ,iBAAMV,GAAG,CAAC;AACNW,YAAAA,IAAI,EAAET,uBADA;AAENI,YAAAA,OAAO,EAAEI;AAFH,WAAD,CAAT;;AANR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAWQ,iBAAMV,GAAG,CAAC;AACNW,YAAAA,IAAI,EAAER,uBADA;AAENS,YAAAA,KAAK,EAAE,YAAIC,QAAJ,CAAaR;AAFd,WAAD,CAAT;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,SAAUZ,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,SAAS,CAACG,OAAO,CAACa,uBAAT,EAAkCtB,YAAlC,CAAf;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAME,GAAG,CAAC,CACNC,IAAI,CAACJ,iBAAD,CADE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {reviewinsert} from '../api/ApiService';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport * as actions from '../reducers/review';\nimport {REVIEW_REGISTER_SUCCESS, REVIEW_REGISTER_FAILURE} from \"../reducers/review\";\n\nfunction reviewInsertAPI(data) {\n    return reviewinsert(data);\n}\n\nfunction* reviewInsert( {payload} ) {\n    try {\n        const review = payload;\n        console.log(review);\n        return;\n        const result = yield call(reviewInsertAPI, review);\n        yield put({\n            type: REVIEW_REGISTER_SUCCESS,\n            payload: result,\n        });\n    } catch (err) {\n        yield put({\n            type: REVIEW_REGISTER_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchReviewInsert() {\n    yield takeEvery(actions.REVIEW_REGISTER_REQUEST, reviewInsert);\n}\n\nexport default function* reviewSaga() {\n    yield all([\n        fork(watchReviewInsert),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}