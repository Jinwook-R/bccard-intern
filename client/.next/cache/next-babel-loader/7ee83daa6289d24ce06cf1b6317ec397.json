{"ast":null,"code":"var _jsxFileName = \"/Users/jin/Desktop/bccard-intern/client/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport 'antd/dist/antd.css';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport wrapper from \"../store/configureStore\";\nimport rootSaga from \"../sagas\"; //_app.js는 페이지들의 공통인 부분\n\nconst App = ({\n  Component\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, \"BC\\uB85C\")), __jsx(Component, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }));\n};\n\nApp.propTypes = {\n  Component: PropTypes.elementType.isRequired\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducers, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default wrapper.withRedux(App);","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/pages/_app.js"],"names":["React","useState","applyMiddleware","compose","createStore","createSagaMiddleware","PropTypes","Head","wrapper","rootSaga","App","Component","propTypes","elementType","isRequired","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","store","reducers","run","withRedux"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CACA;;AACA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAEzB,SACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CAVD;;AAYAD,GAAG,CAACE,SAAJ,GAAgB;AACZD,EAAAA,SAAS,EAAEL,SAAS,CAACO,WAAV,CAAsBC;AADrB,CAAhB;;AAIA,MAAMC,cAAc,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC9C,QAAMC,cAAc,GAAGb,oBAAoB,EAA3C;AACA,QAAMc,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,QAAQ,GAAG,QACXjB,OAAO,CAACD,eAAe,CAAC,GAAGiB,WAAJ,CAAhB,CADI,GAEXhB,OAAO,CACLD,eAAe,CAAC,GAAGiB,WAAJ,CADV,EAEL,CAACF,OAAO,CAACI,QAAT,IAAqB,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WAApE,GAAkFD,MAAM,CAACC,4BAAP,EAAlF,GAA0HC,CAAC,IAAIA,CAF1H,CAFb;AAMA,QAAMC,KAAK,GAAGrB,WAAW,CAACsB,QAAD,EAAWV,YAAX,EAAyBI,QAAzB,CAAzB;AACAF,EAAAA,cAAc,CAACS,GAAf,CAAmBlB,QAAnB;AACA,SAAOgB,KAAP;AACH,CAZD;;AAcA,eAAejB,OAAO,CAACoB,SAAR,CAAkBlB,GAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport 'antd/dist/antd.css';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport wrapper from \"../store/configureStore\";\nimport rootSaga from \"../sagas\";\n//_app.js는 페이지들의 공통인 부분\nconst App = ({Component}) => {\n\n    return (\n        <>\n            <Head>\n                <title>BC로</title>\n            </Head>\n            <Component/>\n        </>\n    );\n}\n\nApp.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n}\n\nconst configureStore = (initialState, options) => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware];\n    const enhancer = process.env.NODE_ENV === 'production'\n        ? compose(applyMiddleware(...middlewares))\n        : compose(\n            applyMiddleware(...middlewares),\n            !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n        );\n    const store = createStore(reducers, initialState, enhancer);\n    sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nexport default wrapper.withRedux(App);\n"]},"metadata":{},"sourceType":"module"}