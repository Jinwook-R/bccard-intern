{"ast":null,"code":"import { myreviewlist, reviewInsertRequest, reviewFileInsertRequest } from '../api/ApiService';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport * as actions from '../reducers/review';\nimport { MY_REVIEW_LIST_SUCCESS, MY_REVIEW_LIST_FAILURE, REVIEW_FILE_REGISTER_SUCCESS, REVIEW_FILE_REGISTER_FAILURE } from \"../reducers/review\";\n\nfunction reviewInsertAPI(data) {\n  return reviewInsertRequest(data);\n}\n\nfunction reviewFileInsertAPI(data) {\n  return reviewFileInsertRequest(data);\n}\n\nfunction myReviewListAPI(userId) {\n  return myreviewlist(userId);\n}\n\nfunction* myReviewList({\n  payload\n}) {\n  try {\n    const userId = payload;\n    const result = yield myReviewListAPI(userId);\n    yield put({\n      type: MY_REVIEW_LIST_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    yield put({\n      type: MY_REVIEW_LIST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* reviewFileInsert({\n  payload\n}) {\n  console.log('reviewFileInsert:', payload.data);\n\n  try {\n    const result = yield call(reviewFileInsertAPI, payload.data);\n    yield put({\n      type: REVIEW_FILE_REGISTER_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    yield put({\n      type: REVIEW_FILE_REGISTER_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* reviewInsert({\n  payload\n}) {\n  console.log('reviewInsert:', payload);\n\n  try {\n    const data = payload;\n    const result = yield call(reviewInsertAPI, data);\n    yield put({\n      type: REVIEW_FILE_REGISTER_SUCCESS,\n      payload: result\n    });\n  } catch (err) {\n    yield put({\n      type: REVIEW_FILE_REGISTER_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* watchReviewInsert() {\n  yield takeEvery(actions.REVIEW_REGISTER_REQUEST, reviewInsert);\n}\n\nfunction* watchReviewFileInsert() {\n  yield takeEvery(actions.REVIEW_FILE_REGISTER_REQUEST, reviewFileInsert);\n}\n\nfunction* watchMyReviewList() {\n  yield takeEvery(actions.MY_REVIEW_LIST_REQUEST, myReviewList);\n}\n\nexport default function* reviewSaga() {\n  yield all([fork(watchReviewInsert), fork(watchReviewFileInsert), fork(watchMyReviewList)]);\n}","map":{"version":3,"sources":["/Users/jin/Desktop/bccard-intern/client/sagas/review.js"],"names":["myreviewlist","reviewInsertRequest","reviewFileInsertRequest","all","fork","takeEvery","call","put","actions","MY_REVIEW_LIST_SUCCESS","MY_REVIEW_LIST_FAILURE","REVIEW_FILE_REGISTER_SUCCESS","REVIEW_FILE_REGISTER_FAILURE","reviewInsertAPI","data","reviewFileInsertAPI","myReviewListAPI","userId","myReviewList","payload","result","type","err","error","response","reviewFileInsert","console","log","reviewInsert","watchReviewInsert","REVIEW_REGISTER_REQUEST","watchReviewFileInsert","REVIEW_FILE_REGISTER_REQUEST","watchMyReviewList","MY_REVIEW_LIST_REQUEST","reviewSaga"],"mappings":"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","sourcesContent":["import {\n    myreviewlist,\n    reviewInsertRequest,\n    reviewFileInsertRequest\n} from '../api/ApiService';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport * as actions from '../reducers/review';\nimport {MY_REVIEW_LIST_SUCCESS, MY_REVIEW_LIST_FAILURE, REVIEW_FILE_REGISTER_SUCCESS, REVIEW_FILE_REGISTER_FAILURE} from \"../reducers/review\";\n\nfunction reviewInsertAPI(data) {\n    return reviewInsertRequest(data);\n}\n\nfunction reviewFileInsertAPI(data) {\n    return reviewFileInsertRequest(data);\n}\n\nfunction myReviewListAPI( userId ) {\n    return myreviewlist(userId)\n}\n\nfunction* myReviewList( {payload} ) {\n\n    try {\n\n        const userId = payload;\n        const result = yield myReviewListAPI(userId);\n\n        yield put({\n            type: MY_REVIEW_LIST_SUCCESS,\n            payload: result\n        });\n    } catch (err) {\n        yield put({\n            type: MY_REVIEW_LIST_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\n\nfunction* reviewFileInsert( {payload} ) {\n\n    console.log('reviewFileInsert:' , payload.data);\n\n    try {\n        const result = yield call(reviewFileInsertAPI, payload.data);\n        yield put({\n            type: REVIEW_FILE_REGISTER_SUCCESS,\n            payload: result,\n        });\n    } catch (err) {\n        yield put({\n            type: REVIEW_FILE_REGISTER_FAILURE,\n            error: err,\n        });\n    }\n}\n\n\nfunction* reviewInsert( {payload} ) {\n    console.log('reviewInsert:' , payload);\n    try {\n        const data = payload;\n        const result = yield call(reviewInsertAPI, data);\n        yield put({\n            type: REVIEW_FILE_REGISTER_SUCCESS,\n            payload: result,\n        });\n    } catch (err) {\n        yield put({\n            type: REVIEW_FILE_REGISTER_FAILURE,\n            error: err,\n        });\n    }\n}\n\nfunction* watchReviewInsert() {\n    yield takeEvery(actions.REVIEW_REGISTER_REQUEST, reviewInsert);\n}\n\nfunction* watchReviewFileInsert() {\n    yield takeEvery(actions.REVIEW_FILE_REGISTER_REQUEST, reviewFileInsert);\n}\n\nfunction* watchMyReviewList() {\n    yield takeEvery(actions.MY_REVIEW_LIST_REQUEST, myReviewList);\n}\n\nexport default function* reviewSaga() {\n    yield all([\n        fork(watchReviewInsert),\n        fork(watchReviewFileInsert),\n        fork(watchMyReviewList)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}