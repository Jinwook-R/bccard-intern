{"ast":null,"code":"import { API_BASE_URL } from './config.js';\nimport axios from \"axios\";\n\nfunction call(api, method, data, config) {\n  let headers;\n\n  if (config === 'reviewInsertFile') {\n    headers = new Headers({});\n  } else {\n    headers = new Headers({\n      \"Content-Type\": \"application/json\"\n    });\n  }\n\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n\n  if (accessToken && accessToken !== null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n\n  const options = {\n    headers,\n    url: API_BASE_URL + api,\n    method\n  };\n\n  if (data && config !== 'reviewInsertFile') {\n    options.body = JSON.stringify(data);\n  } else {\n    options.body = data;\n  }\n\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (response.status !== 200) {\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n}\n\nexport function loadUserRequest(user) {\n  const api = \"/auth\";\n  console.log('loadUserReqeust', user);\n  return axios.post(api, user);\n}\nexport function logInRequest(user) {\n  const api = `/auth/login`;\n  console.log(api);\n  return axios.post(api, user);\n}\nexport function signOutRequest() {\n  console.log('signOutRequest');\n  return axios.post('/auth/logout');\n}\nexport function myreviewlist(userId) {\n  console.log('myreviewlist API Called');\n  return call(\"/review/userReview\", \"GET\", userId).then(response => {\n    if (response) {\n      console.log(\"response: \", response);\n    }\n\n    return response;\n  });\n}\nexport function signup(user) {\n  return call(\"/auth/signup\", \"POST\", user).then(response => {\n    console.log(response.status);\n\n    if (response.status === 200) {\n      alert(\"회원가입이 완료되었습니다:)\");\n    } else {\n      alert(\"회원가입에 실패하였습니다..\");\n    }\n  });\n}\nexport function reviewInsertRequest({\n  review\n}) {\n  return axios.post(\"POST\", review);\n}\nexport function reviewfileInsertRequest({\n  file\n}) {\n  const data = file;\n  console.log(data);\n  return call(\"/review/insertFile\", \"POST\", data, 'reviewInsertFile').then(response => {\n    console.log(response);\n    location.href = '/';\n  });\n}\nexport function restaurantlist() {\n  return call(\"/restaurant/list\", \"GET\").then(response => {\n    if (response) {\n      console.log(\"response: \", response);\n    }\n\n    return response;\n  });\n}","map":{"version":3,"sources":["/Users/bccard/Desktop/bccard-intern/client/api/ApiService.js"],"names":["API_BASE_URL","axios","call","api","method","data","config","headers","Headers","accessToken","localStorage","getItem","append","options","url","body","JSON","stringify","fetch","then","response","json","status","Promise","reject","loadUserRequest","user","console","log","post","logInRequest","signOutRequest","myreviewlist","userId","signup","alert","reviewInsertRequest","review","reviewfileInsertRequest","file","location","href","restaurantlist"],"mappings":"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","sourcesContent":["import {API_BASE_URL} from './config.js';\nimport axios from \"axios\";\nfunction call(api, method, data, config){\n    let headers;\n\n    if(config === 'reviewInsertFile'){\n        headers = new Headers({});\n    }else{\n        headers = new Headers({\n             \"Content-Type\":\"application/json\",\n         });\n    }\n\n    const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n    if(accessToken && accessToken !== null){\n        headers.append(\"Authorization\", \"Bearer \"+ accessToken);\n    }\n\n    const options = {\n        headers,\n        url: API_BASE_URL + api,\n        method,\n    };\n\n    if(data && config !== 'reviewInsertFile'){\n        options.body= JSON.stringify(data);\n    } else {\n        options.body = data;\n    }\n\n    return fetch(options.url, options).then((response) =>\n        response.json().then((json) => {\n            if(response.status !== 200){\n                return Promise.reject(json);\n            }\n            return json;\n        }));\n}\n\nexport function loadUserRequest(user){\n    const api = \"/auth\";\n    console.log('loadUserReqeust', user);\n    return axios.post(api, user);\n}\n\nexport function logInRequest(user) {\n    const api = `/auth/login`;\n    console.log(api);\n    return axios.post(api, user);\n}\n\nexport function signOutRequest() {\n    console.log('signOutRequest');\n    return axios.post('/auth/logout');\n}\n\nexport function myreviewlist(userId) {\n    console.log('myreviewlist API Called');\n    return call(\"/review/userReview\", \"GET\", userId)\n        .then((response) => {\n            if(response) {\n                console.log(\"response: \", response);\n            }\n            return response;\n        });\n}\n\n\nexport function signup(user) {\n    return call(\"/auth/signup\", \"POST\", user)\n        .then((response) => {\n            console.log(response.status)\n            if(response.status === 200) {\n                alert(\"회원가입이 완료되었습니다:)\");\n\n            } else {\n                alert(\"회원가입에 실패하였습니다..\");\n            }\n        });\n}\n\n\n\nexport function reviewInsertRequest({review}) {\n    return axios.post(\"POST\", review);\n}\n\nexport function reviewfileInsertRequest({file}){\n    const data = file;\n    console.log(data)\n    return call(\"/review/insertFile\", \"POST\", data, 'reviewInsertFile')\n        .then((response) => {\n            console.log(response);\n            location.href = '/';\n        });\n}\n\nexport function restaurantlist() {\n    return call(\"/restaurant/list\", \"GET\")\n        .then((response) => {\n            if(response) {\n                console.log(\"response: \", response);\n            }\n            return response;\n        });\n}\n\n"]},"metadata":{},"sourceType":"module"}